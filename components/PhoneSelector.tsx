'use client';

import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface CountryCode {
  code: string;
  name: string;
  flag: string;
  dialCode: string;
}

const countryCodes: CountryCode[] = [
  // Americas - North
  { code: 'US', name: 'United States', flag: 'ğŸ‡ºğŸ‡¸', dialCode: '+1' },
  { code: 'CA', name: 'Canada', flag: 'ğŸ‡¨ğŸ‡¦', dialCode: '+1' },
  { code: 'MX', name: 'MÃ©xico', flag: 'ğŸ‡²ğŸ‡½', dialCode: '+52' },

  // Americas - Central
  { code: 'GT', name: 'Guatemala', flag: 'ğŸ‡¬ğŸ‡¹', dialCode: '+502' },
  { code: 'BZ', name: 'Belize', flag: 'ğŸ‡§ğŸ‡¿', dialCode: '+501' },
  { code: 'SV', name: 'El Salvador', flag: 'ğŸ‡¸ğŸ‡»', dialCode: '+503' },
  { code: 'HN', name: 'Honduras', flag: 'ğŸ‡­ğŸ‡³', dialCode: '+504' },
  { code: 'NI', name: 'Nicaragua', flag: 'ğŸ‡³ğŸ‡®', dialCode: '+505' },
  { code: 'CR', name: 'Costa Rica', flag: 'ğŸ‡¨ğŸ‡·', dialCode: '+506' },
  { code: 'PA', name: 'PanamÃ¡', flag: 'ğŸ‡µğŸ‡¦', dialCode: '+507' },

  // Americas - South
  { code: 'AR', name: 'Argentina', flag: 'ğŸ‡¦ğŸ‡·', dialCode: '+54' },
  { code: 'BR', name: 'Brasil', flag: 'ğŸ‡§ğŸ‡·', dialCode: '+55' },
  { code: 'CL', name: 'Chile', flag: 'ğŸ‡¨ğŸ‡±', dialCode: '+56' },
  { code: 'CO', name: 'Colombia', flag: 'ğŸ‡¨ğŸ‡´', dialCode: '+57' },
  { code: 'VE', name: 'Venezuela', flag: 'ğŸ‡»ğŸ‡ª', dialCode: '+58' },
  { code: 'GY', name: 'Guyana', flag: 'ğŸ‡¬ğŸ‡¾', dialCode: '+592' },
  { code: 'SR', name: 'Suriname', flag: 'ğŸ‡¸ğŸ‡·', dialCode: '+597' },
  { code: 'UY', name: 'Uruguay', flag: 'ğŸ‡ºğŸ‡¾', dialCode: '+598' },
  { code: 'PE', name: 'PerÃº', flag: 'ğŸ‡µğŸ‡ª', dialCode: '+51' },
  { code: 'EC', name: 'Ecuador', flag: 'ğŸ‡ªğŸ‡¨', dialCode: '+593' },
  { code: 'BO', name: 'Bolivia', flag: 'ğŸ‡§ğŸ‡´', dialCode: '+591' },
  { code: 'PY', name: 'Paraguay', flag: 'ğŸ‡µğŸ‡¾', dialCode: '+595' },

  // Caribbean
  { code: 'CU', name: 'Cuba', flag: 'ğŸ‡¨ğŸ‡º', dialCode: '+53' },
  { code: 'JM', name: 'Jamaica', flag: 'ğŸ‡¯ğŸ‡²', dialCode: '+1876' },
  { code: 'DO', name: 'Dominican Republic', flag: 'ğŸ‡©ğŸ‡´', dialCode: '+1809' },
  { code: 'PR', name: 'Puerto Rico', flag: 'ğŸ‡µğŸ‡·', dialCode: '+1787' },
  { code: 'TT', name: 'Trinidad and Tobago', flag: 'ğŸ‡¹ğŸ‡¹', dialCode: '+1868' },
  { code: 'BB', name: 'Barbados', flag: 'ğŸ‡§ğŸ‡§', dialCode: '+1246' },

  // Europe - Western
  { code: 'ES', name: 'EspaÃ±a', flag: 'ğŸ‡ªğŸ‡¸', dialCode: '+34' },
  { code: 'PT', name: 'Portugal', flag: 'ğŸ‡µğŸ‡¹', dialCode: '+351' },
  { code: 'FR', name: 'France', flag: 'ğŸ‡«ğŸ‡·', dialCode: '+33' },
  { code: 'GB', name: 'United Kingdom', flag: 'ğŸ‡¬ğŸ‡§', dialCode: '+44' },
  { code: 'IE', name: 'Ireland', flag: 'ğŸ‡®ğŸ‡ª', dialCode: '+353' },
  { code: 'DE', name: 'Germany', flag: 'ğŸ‡©ğŸ‡ª', dialCode: '+49' },
  { code: 'AT', name: 'Austria', flag: 'ğŸ‡¦ğŸ‡¹', dialCode: '+43' },
  { code: 'CH', name: 'Switzerland', flag: 'ğŸ‡¨ğŸ‡­', dialCode: '+41' },
  { code: 'IT', name: 'Italy', flag: 'ğŸ‡®ğŸ‡¹', dialCode: '+39' },
  { code: 'NL', name: 'Netherlands', flag: 'ğŸ‡³ğŸ‡±', dialCode: '+31' },
  { code: 'BE', name: 'Belgium', flag: 'ğŸ‡§ğŸ‡ª', dialCode: '+32' },
  { code: 'LU', name: 'Luxembourg', flag: 'ğŸ‡±ğŸ‡º', dialCode: '+352' },

  // Europe - Nordic
  { code: 'SE', name: 'Sweden', flag: 'ğŸ‡¸ğŸ‡ª', dialCode: '+46' },
  { code: 'NO', name: 'Norway', flag: 'ğŸ‡³ğŸ‡´', dialCode: '+47' },
  { code: 'DK', name: 'Denmark', flag: 'ğŸ‡©ğŸ‡°', dialCode: '+45' },
  { code: 'FI', name: 'Finland', flag: 'ğŸ‡«ğŸ‡®', dialCode: '+358' },
  { code: 'IS', name: 'Iceland', flag: 'ğŸ‡®ğŸ‡¸', dialCode: '+354' },

  // Europe - Eastern
  { code: 'PL', name: 'Poland', flag: 'ğŸ‡µğŸ‡±', dialCode: '+48' },
  { code: 'CZ', name: 'Czech Republic', flag: 'ğŸ‡¨ğŸ‡¿', dialCode: '+420' },
  { code: 'SK', name: 'Slovakia', flag: 'ğŸ‡¸ğŸ‡°', dialCode: '+421' },
  { code: 'HU', name: 'Hungary', flag: 'ğŸ‡­ğŸ‡º', dialCode: '+36' },
  { code: 'RO', name: 'Romania', flag: 'ğŸ‡·ğŸ‡´', dialCode: '+40' },
  { code: 'BG', name: 'Bulgaria', flag: 'ğŸ‡§ğŸ‡¬', dialCode: '+359' },
  { code: 'HR', name: 'Croatia', flag: 'ğŸ‡­ğŸ‡·', dialCode: '+385' },
  { code: 'SI', name: 'Slovenia', flag: 'ğŸ‡¸ğŸ‡®', dialCode: '+386' },
  { code: 'EE', name: 'Estonia', flag: 'ğŸ‡ªğŸ‡ª', dialCode: '+372' },
  { code: 'LV', name: 'Latvia', flag: 'ğŸ‡±ğŸ‡»', dialCode: '+371' },
  { code: 'LT', name: 'Lithuania', flag: 'ğŸ‡±ğŸ‡¹', dialCode: '+370' },
  { code: 'RU', name: 'Russia', flag: 'ğŸ‡·ğŸ‡º', dialCode: '+7' },
  { code: 'UA', name: 'Ukraine', flag: 'ğŸ‡ºğŸ‡¦', dialCode: '+380' },
  { code: 'BY', name: 'Belarus', flag: 'ğŸ‡§ğŸ‡¾', dialCode: '+375' },

  // Europe - Southern
  { code: 'GR', name: 'Greece', flag: 'ğŸ‡¬ğŸ‡·', dialCode: '+30' },
  { code: 'CY', name: 'Cyprus', flag: 'ğŸ‡¨ğŸ‡¾', dialCode: '+357' },
  { code: 'MT', name: 'Malta', flag: 'ğŸ‡²ğŸ‡¹', dialCode: '+356' },
  { code: 'AL', name: 'Albania', flag: 'ğŸ‡¦ğŸ‡±', dialCode: '+355' },
  { code: 'MK', name: 'North Macedonia', flag: 'ğŸ‡²ğŸ‡°', dialCode: '+389' },
  { code: 'ME', name: 'Montenegro', flag: 'ğŸ‡²ğŸ‡ª', dialCode: '+382' },
  { code: 'RS', name: 'Serbia', flag: 'ğŸ‡·ğŸ‡¸', dialCode: '+381' },
  { code: 'BA', name: 'Bosnia and Herzegovina', flag: 'ğŸ‡§ğŸ‡¦', dialCode: '+387' },

  // Asia - East
  { code: 'CN', name: 'China', flag: 'ğŸ‡¨ğŸ‡³', dialCode: '+86' },
  { code: 'JP', name: 'Japan', flag: 'ğŸ‡¯ğŸ‡µ', dialCode: '+81' },
  { code: 'KR', name: 'South Korea', flag: 'ğŸ‡°ğŸ‡·', dialCode: '+82' },
  { code: 'KP', name: 'North Korea', flag: 'ğŸ‡°ğŸ‡µ', dialCode: '+850' },
  { code: 'HK', name: 'Hong Kong', flag: 'ğŸ‡­ğŸ‡°', dialCode: '+852' },
  { code: 'TW', name: 'Taiwan', flag: 'ğŸ‡¹ğŸ‡¼', dialCode: '+886' },
  { code: 'MO', name: 'Macau', flag: 'ğŸ‡²ğŸ‡´', dialCode: '+853' },
  { code: 'MN', name: 'Mongolia', flag: 'ğŸ‡²ğŸ‡³', dialCode: '+976' },

  // Asia - Southeast
  { code: 'SG', name: 'Singapore', flag: 'ğŸ‡¸ğŸ‡¬', dialCode: '+65' },
  { code: 'MY', name: 'Malaysia', flag: 'ğŸ‡²ğŸ‡¾', dialCode: '+60' },
  { code: 'TH', name: 'Thailand', flag: 'ğŸ‡¹ğŸ‡­', dialCode: '+66' },
  { code: 'VN', name: 'Vietnam', flag: 'ğŸ‡»ğŸ‡³', dialCode: '+84' },
  { code: 'PH', name: 'Philippines', flag: 'ğŸ‡µğŸ‡­', dialCode: '+63' },
  { code: 'ID', name: 'Indonesia', flag: 'ğŸ‡®ğŸ‡©', dialCode: '+62' },
  { code: 'BN', name: 'Brunei', flag: 'ğŸ‡§ğŸ‡³', dialCode: '+673' },
  { code: 'LA', name: 'Laos', flag: 'ğŸ‡±ğŸ‡¦', dialCode: '+856' },
  { code: 'KH', name: 'Cambodia', flag: 'ğŸ‡°ğŸ‡­', dialCode: '+855' },
  { code: 'MM', name: 'Myanmar', flag: 'ğŸ‡²ğŸ‡²', dialCode: '+95' },

  // Asia - South
  { code: 'IN', name: 'India', flag: 'ğŸ‡®ğŸ‡³', dialCode: '+91' },
  { code: 'PK', name: 'Pakistan', flag: 'ğŸ‡µğŸ‡°', dialCode: '+92' },
  { code: 'BD', name: 'Bangladesh', flag: 'ğŸ‡§ğŸ‡©', dialCode: '+880' },
  { code: 'LK', name: 'Sri Lanka', flag: 'ğŸ‡±ğŸ‡°', dialCode: '+94' },
  { code: 'NP', name: 'Nepal', flag: 'ğŸ‡³ğŸ‡µ', dialCode: '+977' },
  { code: 'BT', name: 'Bhutan', flag: 'ğŸ‡§ğŸ‡¹', dialCode: '+975' },
  { code: 'MV', name: 'Maldives', flag: 'ğŸ‡²ğŸ‡»', dialCode: '+960' },

  // Middle East
  { code: 'TR', name: 'Turkey', flag: 'ğŸ‡¹ğŸ‡·', dialCode: '+90' },
  { code: 'IL', name: 'Israel', flag: 'ğŸ‡®ğŸ‡±', dialCode: '+972' },
  { code: 'PS', name: 'Palestine', flag: 'ğŸ‡µğŸ‡¸', dialCode: '+970' },
  { code: 'JO', name: 'Jordan', flag: 'ğŸ‡¯ğŸ‡´', dialCode: '+962' },
  { code: 'LB', name: 'Lebanon', flag: 'ğŸ‡±ğŸ‡§', dialCode: '+961' },
  { code: 'SY', name: 'Syria', flag: 'ğŸ‡¸ğŸ‡¾', dialCode: '+963' },
  { code: 'IQ', name: 'Iraq', flag: 'ğŸ‡®ğŸ‡¶', dialCode: '+964' },
  { code: 'IR', name: 'Iran', flag: 'ğŸ‡®ğŸ‡·', dialCode: '+98' },
  { code: 'SA', name: 'Saudi Arabia', flag: 'ğŸ‡¸ğŸ‡¦', dialCode: '+966' },
  { code: 'AE', name: 'United Arab Emirates', flag: 'ğŸ‡¦ğŸ‡ª', dialCode: '+971' },
  { code: 'QA', name: 'Qatar', flag: 'ğŸ‡¶ğŸ‡¦', dialCode: '+974' },
  { code: 'KW', name: 'Kuwait', flag: 'ğŸ‡°ğŸ‡¼', dialCode: '+965' },
  { code: 'BH', name: 'Bahrain', flag: 'ğŸ‡§ğŸ‡­', dialCode: '+973' },
  { code: 'OM', name: 'Oman', flag: 'ğŸ‡´ğŸ‡²', dialCode: '+968' },
  { code: 'YE', name: 'Yemen', flag: 'ğŸ‡¾ğŸ‡ª', dialCode: '+967' },

  // Africa - North
  { code: 'EG', name: 'Egypt', flag: 'ğŸ‡ªğŸ‡¬', dialCode: '+20' },
  { code: 'LY', name: 'Libya', flag: 'ğŸ‡±ğŸ‡¾', dialCode: '+218' },
  { code: 'TN', name: 'Tunisia', flag: 'ğŸ‡¹ğŸ‡³', dialCode: '+216' },
  { code: 'DZ', name: 'Algeria', flag: 'ğŸ‡©ğŸ‡¿', dialCode: '+213' },
  { code: 'MA', name: 'Morocco', flag: 'ğŸ‡²ğŸ‡¦', dialCode: '+212' },
  { code: 'SD', name: 'Sudan', flag: 'ğŸ‡¸ğŸ‡©', dialCode: '+249' },

  // Africa - West
  { code: 'NG', name: 'Nigeria', flag: 'ğŸ‡³ğŸ‡¬', dialCode: '+234' },
  { code: 'GH', name: 'Ghana', flag: 'ğŸ‡¬ğŸ‡­', dialCode: '+233' },
  { code: 'CI', name: 'Ivory Coast', flag: 'ğŸ‡¨ğŸ‡®', dialCode: '+225' },
  { code: 'SN', name: 'Senegal', flag: 'ğŸ‡¸ğŸ‡³', dialCode: '+221' },
  { code: 'ML', name: 'Mali', flag: 'ğŸ‡²ğŸ‡±', dialCode: '+223' },
  { code: 'BF', name: 'Burkina Faso', flag: 'ğŸ‡§ğŸ‡«', dialCode: '+226' },
  { code: 'NE', name: 'Niger', flag: 'ğŸ‡³ğŸ‡ª', dialCode: '+227' },
  { code: 'TG', name: 'Togo', flag: 'ğŸ‡¹ğŸ‡¬', dialCode: '+228' },
  { code: 'BJ', name: 'Benin', flag: 'ğŸ‡§ğŸ‡¯', dialCode: '+229' },

  // Africa - East
  { code: 'ET', name: 'Ethiopia', flag: 'ğŸ‡ªğŸ‡¹', dialCode: '+251' },
  { code: 'KE', name: 'Kenya', flag: 'ğŸ‡°ğŸ‡ª', dialCode: '+254' },
  { code: 'UG', name: 'Uganda', flag: 'ğŸ‡ºğŸ‡¬', dialCode: '+256' },
  { code: 'TZ', name: 'Tanzania', flag: 'ğŸ‡¹ğŸ‡¿', dialCode: '+255' },
  { code: 'RW', name: 'Rwanda', flag: 'ğŸ‡·ğŸ‡¼', dialCode: '+250' },
  { code: 'BI', name: 'Burundi', flag: 'ğŸ‡§ğŸ‡®', dialCode: '+257' },
  { code: 'SO', name: 'Somalia', flag: 'ğŸ‡¸ğŸ‡´', dialCode: '+252' },
  { code: 'DJ', name: 'Djibouti', flag: 'ğŸ‡©ğŸ‡¯', dialCode: '+253' },
  { code: 'ER', name: 'Eritrea', flag: 'ğŸ‡ªğŸ‡·', dialCode: '+291' },

  // Africa - Southern
  { code: 'ZA', name: 'South Africa', flag: 'ğŸ‡¿ğŸ‡¦', dialCode: '+27' },
  { code: 'ZW', name: 'Zimbabwe', flag: 'ğŸ‡¿ğŸ‡¼', dialCode: '+263' },
  { code: 'ZM', name: 'Zambia', flag: 'ğŸ‡¿ğŸ‡²', dialCode: '+260' },
  { code: 'MW', name: 'Malawi', flag: 'ğŸ‡²ğŸ‡¼', dialCode: '+265' },
  { code: 'MZ', name: 'Mozambique', flag: 'ğŸ‡²ğŸ‡¿', dialCode: '+258' },
  { code: 'BW', name: 'Botswana', flag: 'ğŸ‡§ğŸ‡¼', dialCode: '+267' },
  { code: 'NA', name: 'Namibia', flag: 'ğŸ‡³ğŸ‡¦', dialCode: '+264' },
  { code: 'LS', name: 'Lesotho', flag: 'ğŸ‡±ğŸ‡¸', dialCode: '+266' },
  { code: 'SZ', name: 'Eswatini', flag: 'ğŸ‡¸ğŸ‡¿', dialCode: '+268' },

  // Oceania
  { code: 'AU', name: 'Australia', flag: 'ğŸ‡¦ğŸ‡º', dialCode: '+61' },
  { code: 'NZ', name: 'New Zealand', flag: 'ğŸ‡³ğŸ‡¿', dialCode: '+64' },
  { code: 'FJ', name: 'Fiji', flag: 'ğŸ‡«ğŸ‡¯', dialCode: '+679' },
  { code: 'PG', name: 'Papua New Guinea', flag: 'ğŸ‡µğŸ‡¬', dialCode: '+675' },
  { code: 'NC', name: 'New Caledonia', flag: 'ğŸ‡³ğŸ‡¨', dialCode: '+687' },
  { code: 'VU', name: 'Vanuatu', flag: 'ğŸ‡»ğŸ‡º', dialCode: '+678' },
  { code: 'SB', name: 'Solomon Islands', flag: 'ğŸ‡¸ğŸ‡§', dialCode: '+677' },
  { code: 'TO', name: 'Tonga', flag: 'ğŸ‡¹ğŸ‡´', dialCode: '+676' },
  { code: 'WS', name: 'Samoa', flag: 'ğŸ‡¼ğŸ‡¸', dialCode: '+685' },
  { code: 'PW', name: 'Palau', flag: 'ğŸ‡µğŸ‡¼', dialCode: '+680' },
];

interface PhoneSelectorProps {
  value: string;
  onChange: (fullPhone: string) => void;
  placeholder?: string;
  error?: string;
  label?: string;
}

export default function PhoneSelector({
  value,
  onChange,
  placeholder = "Phone number",
  error,
  label = "Phone"
}: PhoneSelectorProps) {
  const [isOpen, setIsOpen] = useState(false);
  const [searchTerm, setSearchTerm] = useState('');

  // Parse current value to get country code and phone number
  const getSelectedCountry = () => {
    if (!value) return countryCodes[0]; // Default to Argentina

    for (const country of countryCodes) {
      if (value.startsWith(country.dialCode)) {
        return country;
      }
    }
    return countryCodes[0];
  };

  const getPhoneNumber = () => {
    if (!value) return '';
    const selectedCountry = getSelectedCountry();
    return value.replace(selectedCountry.dialCode, '').trim();
  };

  const selectedCountry = getSelectedCountry();
  const phoneNumber = getPhoneNumber();

  const filteredCountries = countryCodes.filter(country =>
    country.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    country.dialCode.includes(searchTerm)
  );

  const handleCountrySelect = (country: CountryCode) => {
    const newValue = country.dialCode + (phoneNumber ? ' ' + phoneNumber : '');
    onChange(newValue);
    setIsOpen(false);
    setSearchTerm('');
  };

  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const phone = e.target.value;
    const newValue = selectedCountry.dialCode + (phone ? ' ' + phone : '');
    onChange(newValue);
  };

  return (
    <div className="relative">
      {label && (
        <label className="block text-sm font-semibold text-gray-300 mb-3">
          {label}
        </label>
      )}

      <div className="flex">
        {/* Country Code Selector */}
        <div className="relative">
          <button
            type="button"
            onClick={() => setIsOpen(!isOpen)}
            className="flex items-center px-4 py-3 border border-gray-600 rounded-l-xl bg-gray-700 hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent transition-all duration-200"
          >
            <span className="text-lg mr-2">{selectedCountry.flag}</span>
            <span className="text-white text-sm font-medium">{selectedCountry.dialCode}</span>
            <svg className="w-4 h-4 ml-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
            </svg>
          </button>

          <AnimatePresence>
            {isOpen && (
              <motion.div
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                className="absolute top-full left-0 z-50 w-80 bg-gray-800 border border-gray-600 rounded-lg shadow-lg max-h-60 overflow-hidden"
              >
                {/* Search */}
                <div className="p-3 border-b border-gray-600">
                  <input
                    type="text"
                    placeholder="Search countries..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-yellow-400"
                  />
                </div>

                {/* Countries List */}
                <div className="max-h-40 overflow-y-auto">
                  {filteredCountries.map((country) => (
                    <button
                      key={country.code}
                      type="button"
                      onClick={() => handleCountrySelect(country)}
                      className="w-full flex items-center px-3 py-2 hover:bg-gray-700 text-left transition-colors"
                    >
                      <span className="text-lg mr-3">{country.flag}</span>
                      <span className="text-white flex-1">{country.name}</span>
                      <span className="text-gray-400 text-sm">{country.dialCode}</span>
                    </button>
                  ))}
                </div>
              </motion.div>
            )}
          </AnimatePresence>
        </div>

        {/* Phone Number Input */}
        <input
          type="tel"
          value={phoneNumber}
          onChange={handlePhoneChange}
          placeholder={placeholder}
          className={`flex-1 px-4 py-3 border rounded-r-xl bg-gray-700 text-white placeholder-gray-400 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent ${
            error
              ? 'border-red-500 focus:ring-red-400'
              : 'border-gray-600 hover:border-gray-500'
          }`}
        />
      </div>

      {/* Error Message */}
      {error && (
        <motion.p
          initial={{ opacity: 0, y: -10 }}
          animate={{ opacity: 1, y: 0 }}
          className="mt-2 text-sm text-red-400"
        >
          {error}
        </motion.p>
      )}

      {/* Click outside to close */}
      {isOpen && (
        <div
          className="fixed inset-0 z-40"
          onClick={() => setIsOpen(false)}
        />
      )}
    </div>
  );
}