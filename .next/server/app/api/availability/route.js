"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/availability/route";
exports.ids = ["app/api/availability/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Favailability%2Froute&page=%2Fapi%2Favailability%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Favailability%2Froute.ts&appDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Favailability%2Froute&page=%2Fapi%2Favailability%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Favailability%2Froute.ts&appDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var C_Users_loko_OneDrive_Desktop_Escritorio_surfcamp_app_api_availability_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/availability/route.ts */ \"(rsc)/./app/api/availability/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/availability/route\",\n        pathname: \"/api/availability\",\n        filename: \"route\",\n        bundlePath: \"app/api/availability/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\loko_\\\\OneDrive\\\\Desktop\\\\Escritorio\\\\surfcamp\\\\app\\\\api\\\\availability\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_loko_OneDrive_Desktop_Escritorio_surfcamp_app_api_availability_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/availability/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdmFpbGFiaWxpdHklMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF2YWlsYWJpbGl0eSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF2YWlsYWJpbGl0eSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNsb2tvXyU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q0VzY3JpdG9yaW8lNUNzdXJmY2FtcCU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDbG9rb18lNUNPbmVEcml2ZSU1Q0Rlc2t0b3AlNUNFc2NyaXRvcmlvJTVDc3VyZmNhbXAmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ3lEO0FBQ3hIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ2lKOztBQUVqSiIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cmZjYW1wLWJvb2tpbmctc3lzdGVtLz82ZTYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGxva29fXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcRXNjcml0b3Jpb1xcXFxzdXJmY2FtcFxcXFxhcHBcXFxcYXBpXFxcXGF2YWlsYWJpbGl0eVxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYXZhaWxhYmlsaXR5L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYXZhaWxhYmlsaXR5XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hdmFpbGFiaWxpdHkvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxsb2tvX1xcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXEVzY3JpdG9yaW9cXFxcc3VyZmNhbXBcXFxcYXBwXFxcXGFwaVxcXFxhdmFpbGFiaWxpdHlcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYXZhaWxhYmlsaXR5L3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Favailability%2Froute&page=%2Fapi%2Favailability%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Favailability%2Froute.ts&appDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/availability/route.ts":
/*!***************************************!*\
  !*** ./app/api/availability/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_lobbypms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/lobbypms */ \"(rsc)/./lib/lobbypms.ts\");\n\n\nconst sentWhatsAppSet = new Set();\nasync function POST(request) {\n    try {\n        console.log(\"\\uD83C\\uDFAF Availability API called - START\");\n        const body = await request.json();\n        const { checkIn, checkOut, guests } = body;\n        console.log(\"\\uD83C\\uDFAF Availability API called with:\", {\n            checkIn,\n            checkOut,\n            guests\n        });\n        try {\n            console.log(\"\\uD83D\\uDE80 Calling LobbyPMS API with CORRECT endpoint...\");\n            // Use the correct endpoint: /available-rooms\n            const availabilityData = await _lib_lobbypms__WEBPACK_IMPORTED_MODULE_1__.lobbyPMSClient.getAvailableRooms({\n                start_date: checkIn,\n                end_date: checkOut\n            });\n            console.log(\"\\uD83D\\uDCCB ===== AVAILABILITY DATA RECEIVED =====\");\n            console.log(\"\\uD83D\\uDCCB Total days received:\", availabilityData.length);\n            console.log(\"\\uD83D\\uDCCB Raw availability data:\", JSON.stringify(availabilityData, null, 2));\n            // Process the availability data to extract rooms and prices\n            const roomTypes = {\n                \"casa-playa\": {\n                    roomTypeId: \"casa-playa\",\n                    roomTypeName: \"Casa de Playa (Cuarto Compartido)\",\n                    maxGuests: 8,\n                    categories: [],\n                    availableRoomsByDay: [],\n                    prices: []\n                },\n                \"casitas-privadas\": {\n                    roomTypeId: \"casitas-privadas\",\n                    roomTypeName: \"Casitas Privadas\",\n                    maxGuests: 2,\n                    categories: [],\n                    availableRoomsByDay: [],\n                    prices: []\n                },\n                \"casas-deluxe\": {\n                    roomTypeId: \"casas-deluxe\",\n                    roomTypeName: \"Casas Deluxe\",\n                    maxGuests: 2,\n                    categories: [],\n                    availableRoomsByDay: [],\n                    prices: []\n                }\n            };\n            // Calculate number of nights (not days)\n            // For check-in 17/7 and check-out 18/7, we only need to verify night of 17/7\n            const checkInDate = new Date(checkIn);\n            const checkOutDate = new Date(checkOut);\n            const nights = Math.ceil((checkOutDate.getTime() - checkInDate.getTime()) / (1000 * 60 * 60 * 24));\n            console.log(`📅 Check-in: ${checkIn}, Check-out: ${checkOut}`);\n            console.log(`📅 Nights needed: ${nights}`);\n            console.log(`📅 Will only process first ${nights} days for availability`);\n            // Track individual categories for proper availability calculation\n            const individualCategories = {};\n            // Only process the days we need (number of nights)\n            const daysToProcess = Math.min(nights, availabilityData.length);\n            availabilityData.slice(0, daysToProcess).forEach((dayData, dayIndex)=>{\n                console.log(`📅 Processing day ${dayIndex + 1}: ${dayData.date}`);\n                if (dayData.categories && Array.isArray(dayData.categories)) {\n                    dayData.categories.forEach((category, catIndex)=>{\n                        console.log(`🏠 ===== PROCESSING CATEGORY ${catIndex + 1} =====`);\n                        console.log(`🏠 Category ID: ${category.category_id}`);\n                        console.log(`🏠 Category name: \"${category.name}\"`);\n                        console.log(`🏠 Available rooms: ${category.available_rooms}`);\n                        console.log(`🏠 Prices:`, category.prices);\n                        // Map categories to our 3 accommodation types\n                        const categoryName = (category.name || \"\").toLowerCase();\n                        const singlePrice = category.prices?.find((p)=>p.people === 1)?.value;\n                        // Initialize category tracking if not exists\n                        if (!individualCategories[categoryName]) {\n                            individualCategories[categoryName] = {\n                                availableByDay: new Array(nights).fill(0),\n                                prices: [],\n                                roomType: \"\"\n                            };\n                        }\n                        // Set availability for this day\n                        individualCategories[categoryName].availableByDay[dayIndex] = category.available_rooms || 0;\n                        // 1. CASA DE PLAYA: SOLO \"Casa Playa\" (las 8 camas dentro de Casa Playa)\n                        if (categoryName === \"casa playa\") {\n                            console.log(\"✅ Matched as Casa de Playa (Cuarto Compartido)\");\n                            roomTypes[\"casa-playa\"].categories.push(category);\n                            individualCategories[categoryName].roomType = \"casa-playa\";\n                            // Solo agregar precio si hay disponibilidad\n                            if (singlePrice && singlePrice > 0 && (category.available_rooms || 0) > 0) {\n                                roomTypes[\"casa-playa\"].prices.push(singlePrice);\n                                individualCategories[categoryName].prices.push(singlePrice);\n                            }\n                        } else if (categoryName === \"casita 3\" || categoryName === \"casita 4\" || categoryName === \"casita 7\") {\n                            console.log(\"✅ Matched as Casita Privada\");\n                            roomTypes[\"casitas-privadas\"].categories.push(category);\n                            individualCategories[categoryName].roomType = \"casitas-privadas\";\n                            // Solo agregar precio si hay disponibilidad\n                            if (singlePrice && singlePrice > 0 && (category.available_rooms || 0) > 0) {\n                                roomTypes[\"casitas-privadas\"].prices.push(singlePrice);\n                                individualCategories[categoryName].prices.push(singlePrice);\n                            }\n                        } else if (categoryName === \"studio 1\" || categoryName === \"studio 2\" || categoryName === \"casita 5\" || categoryName === \"casita 6\") {\n                            console.log(\"✅ Matched as Casa Deluxe\");\n                            roomTypes[\"casas-deluxe\"].categories.push(category);\n                            individualCategories[categoryName].roomType = \"casas-deluxe\";\n                            // Solo agregar precio si hay disponibilidad\n                            if (singlePrice && singlePrice > 0 && (category.available_rooms || 0) > 0) {\n                                roomTypes[\"casas-deluxe\"].prices.push(singlePrice);\n                                individualCategories[categoryName].prices.push(singlePrice);\n                            }\n                        } else {\n                            console.log(`❌ CATEGORY NOT INCLUDED: \"${category.name}\"`);\n                            console.log(`❌ This category is not part of the valid accommodation types`);\n                            console.log(`❌ Only these categories are valid:`);\n                            console.log(`   - Casa de Playa: \"Casa Playa\"`);\n                            console.log(`   - Casitas Privadas: \"Casita 3\", \"Casita 4\", \"Casita 7\"`);\n                            console.log(`   - Casas Deluxe: \"Studio 1\", \"Studio 2\", \"Casita 5\", \"Casita 6\"`);\n                        // Continue processing but don't include this category\n                        }\n                    });\n                }\n            });\n            // Calculate total availability for each room type using correct logic\n            Object.keys(roomTypes).forEach((roomTypeKey)=>{\n                const roomType = roomTypes[roomTypeKey];\n                let totalAvailableForAllDays = 0;\n                // Find all categories that belong to this room type\n                Object.entries(individualCategories).forEach(([categoryName, categoryData])=>{\n                    if (categoryData.roomType === roomTypeKey) {\n                        // For each individual category, calculate minimum available across all days\n                        const minAvailableForCategory = categoryData.availableByDay.length > 0 ? Math.min(...categoryData.availableByDay) : 0;\n                        console.log(`🏠 Category \"${categoryName}\" - Days: [${categoryData.availableByDay.join(\", \")}] - Min: ${minAvailableForCategory}`);\n                        // Add this category's minimum to the total\n                        totalAvailableForAllDays += minAvailableForCategory;\n                    }\n                });\n                // Set the calculated availability\n                roomType.availableRoomsByDay = [\n                    totalAvailableForAllDays\n                ]; // Single value representing total available\n                console.log(`🎯 ${roomTypeKey} - Total available for all days: ${totalAvailableForAllDays}`);\n            });\n            // Convert grouped data to final format\n            const availableRooms = [];\n            // ALWAYS return all 3 accommodation types, even if not available\n            Object.entries(roomTypes).forEach(([key, roomType])=>{\n                // Calculate representative price (median or most common)\n                let finalPrice = null;\n                if (roomType.prices.length > 0) {\n                    // Use the special price for \"Casa Playa\" if it exists\n                    if (key === \"casa-playa\") {\n                        const casaPlayaPrice = roomType.prices.find((p)=>p === 20);\n                        if (casaPlayaPrice) {\n                            finalPrice = casaPlayaPrice;\n                        } else {\n                            // Use median price\n                            const sortedPrices = roomType.prices.sort((a, b)=>a - b);\n                            finalPrice = sortedPrices[Math.floor(sortedPrices.length / 2)];\n                        }\n                    } else {\n                        // Use median price for other types\n                        const sortedPrices = roomType.prices.sort((a, b)=>a - b);\n                        finalPrice = sortedPrices[Math.floor(sortedPrices.length / 2)];\n                    }\n                }\n                // Add room type regardless of availability\n                const totalAvailable = roomType.availableRoomsByDay.length > 0 ? roomType.availableRoomsByDay[0] : 0;\n                availableRooms.push({\n                    roomTypeId: roomType.roomTypeId,\n                    roomTypeName: roomType.roomTypeName,\n                    pricePerNight: finalPrice,\n                    realPrice: finalPrice,\n                    priceSource: finalPrice ? \"LOBBYPMS_AVAILABLE_ROOMS_API\" : null,\n                    maxGuests: roomType.maxGuests,\n                    availableRooms: totalAvailable,\n                    available: totalAvailable > 0,\n                    debug: {\n                        originalCategory: roomType.categories[0] || null,\n                        source: \"available-rooms-endpoint\",\n                        allCategories: roomType.categories.map((c)=>c.name),\n                        allPrices: roomType.prices,\n                        availableRoomsByDay: roomType.availableRoomsByDay,\n                        minAvailableRooms: totalAvailable\n                    }\n                });\n            });\n            console.log(\"\\uD83C\\uDFAF ===== FINAL RESULT WITH REAL PRICES =====\");\n            console.log(\"\\uD83C\\uDFAF Available rooms:\", availableRooms.length);\n            availableRooms.forEach((room, index)=>{\n                console.log(`🏠 ${index + 1}. ${room.roomTypeName}:`);\n                console.log(`   💰 Real Price: $${room.realPrice} (${room.priceSource || \"NO_PRICE\"})`);\n                console.log(`   🛏️ Available: ${room.availableRooms} (min across days)`);\n                console.log(`   📅 By day: [${room.debug.availableRoomsByDay.join(\", \")}]`);\n                console.log(`   📊 All prices: [${room.debug.allPrices.join(\", \")}]`);\n                console.log(`   🏷️ Categories: [${room.debug.allCategories.join(\", \")}]`);\n            });\n            if (availableRooms.length === 0) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    success: false,\n                    error: \"No rooms available for the selected dates\",\n                    debug: {\n                        totalDaysProcessed: availabilityData.length,\n                        availabilityData: availabilityData,\n                        message: \"No matching room categories found\"\n                    }\n                }, {\n                    status: 404\n                });\n            }\n            const result = {\n                success: true,\n                available: true,\n                maxGuests: 12,\n                availableRooms: availableRooms,\n                debug: {\n                    totalDaysFromAPI: availabilityData.length,\n                    endpointUsed: \"/available-rooms\",\n                    priceAnalysis: availableRooms.map((r)=>({\n                            room: r.roomTypeName,\n                            price: r.pricePerNight,\n                            realPrice: r.realPrice,\n                            source: r.priceSource\n                        }))\n                }\n            };\n            // Eliminar toda la lógica de envío de WhatsApp aquí\n            // Solo devolver la respuesta normalmente\n            console.log(\"\\uD83D\\uDCE4 Returning result with REAL prices from correct endpoint:\", JSON.stringify(result, null, 2));\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(result);\n        } catch (apiError) {\n            console.error(\"❌ LobbyPMS API error:\", apiError.message);\n            console.error(\"❌ Full error details:\", {\n                message: apiError.message,\n                name: apiError.name,\n                stack: apiError.stack,\n                response: apiError.response?.data\n            });\n            // Determine if this is an HTML response error\n            const isHtmlError = apiError.message && apiError.message.includes(\"HTML\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: isHtmlError ? \"LobbyPMS API est\\xe1 devolviendo HTML en lugar de JSON - posible problema de IP o autenticaci\\xf3n\" : \"Error de conexi\\xf3n con LobbyPMS\",\n                debug: {\n                    errorType: apiError.name,\n                    message: apiError.message,\n                    suggestion: isHtmlError ? \"Verifica que tu IP est\\xe1 autorizada en LobbyPMS y que el API token es v\\xe1lido\" : \"Endpoint /available-rooms failed - check API credentials and IP authorization\",\n                    endpointUsed: \"/available-rooms\",\n                    isHtmlError: isHtmlError,\n                    timestamp: new Date().toISOString()\n                }\n            }, {\n                status: 503\n            });\n        }\n    } catch (error) {\n        console.error(\"❌ General availability error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Error checking availability\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SixTQUFTUixPQUFPLElBQUlRLFNBQVNSLE9BQU8sQ0FBQ2EsUUFBUSxDQUFDO1lBRWxFLE9BQU81RyxrRkFBWUEsQ0FBQ1MsSUFBSSxDQUFDO2dCQUN2Qm1GLFNBQVM7Z0JBQ1RDLE9BQU9jLGNBQ0gsdUdBQ0E7Z0JBQ0p6QixPQUFPO29CQUNMMkIsV0FBV04sU0FBU3hELElBQUk7b0JBQ3hCZ0QsU0FBU1EsU0FBU1IsT0FBTztvQkFDekJlLFlBQVlILGNBQ1Isc0ZBQ0E7b0JBQ0pSLGNBQWM7b0JBQ2RRLGFBQWFBO29CQUNiSSxXQUFXLElBQUluRixPQUFPb0YsV0FBVztnQkFDbkM7WUFDRixHQUFHO2dCQUFFaEIsUUFBUTtZQUFJO1FBQ25CO0lBRUYsRUFBRSxPQUFPSCxPQUFZO1FBQ25CdkYsUUFBUXVGLEtBQUssQ0FBQyxpQ0FBaUNBO1FBRS9DLE9BQU83RixrRkFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQ3ZCbUYsU0FBUztZQUNUQyxPQUFPO1lBQ1BvQixTQUFTcEIsTUFBTUUsT0FBTztRQUN4QixHQUFHO1lBQUVDLFFBQVE7UUFBSTtJQUNuQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VyZmNhbXAtYm9va2luZy1zeXN0ZW0vLi9hcHAvYXBpL2F2YWlsYWJpbGl0eS9yb3V0ZS50cz8xM2YyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBMb2JieVBNU0F2YWlsYWJpbGl0eVJlc3BvbnNlIH0gZnJvbSAnQC90eXBlcyc7XG5pbXBvcnQgeyBsb2JieVBNU0NsaWVudCB9IGZyb20gJ0AvbGliL2xvYmJ5cG1zJztcbmltcG9ydCB7IHNlbmRXaGF0c0FwcE1lc3NhZ2UgfSBmcm9tICdAL2xpYi93aGF0c2FwcCc7XG5cbmNvbnN0IHNlbnRXaGF0c0FwcFNldCA9IG5ldyBTZXQ8c3RyaW5nPigpO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKCfwn46vIEF2YWlsYWJpbGl0eSBBUEkgY2FsbGVkIC0gU1RBUlQnKTtcbiAgICBcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc3QgeyBjaGVja0luLCBjaGVja091dCwgZ3Vlc3RzIH0gPSBib2R5O1xuXG4gICAgY29uc29sZS5sb2coJ/Cfjq8gQXZhaWxhYmlsaXR5IEFQSSBjYWxsZWQgd2l0aDonLCB7IGNoZWNrSW4sIGNoZWNrT3V0LCBndWVzdHMgfSk7XG5cbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coJ/CfmoAgQ2FsbGluZyBMb2JieVBNUyBBUEkgd2l0aCBDT1JSRUNUIGVuZHBvaW50Li4uJyk7XG4gICAgICBcbiAgICAgIC8vIFVzZSB0aGUgY29ycmVjdCBlbmRwb2ludDogL2F2YWlsYWJsZS1yb29tc1xuICAgICAgY29uc3QgYXZhaWxhYmlsaXR5RGF0YSA9IGF3YWl0IGxvYmJ5UE1TQ2xpZW50LmdldEF2YWlsYWJsZVJvb21zKHtcbiAgICAgICAgc3RhcnRfZGF0ZTogY2hlY2tJbixcbiAgICAgICAgZW5kX2RhdGU6IGNoZWNrT3V0LFxuICAgICAgICAvLyBOb3RlOiBndWVzdF9jb3VudCBpcyBub3QgYSBwYXJhbWV0ZXIgZm9yIHRoaXMgZW5kcG9pbnQgYWNjb3JkaW5nIHRvIGRvY3NcbiAgICAgIH0pO1xuXG4gICAgICBjb25zb2xlLmxvZygn8J+TiyA9PT09PSBBVkFJTEFCSUxJVFkgREFUQSBSRUNFSVZFRCA9PT09PScpO1xuICAgICAgY29uc29sZS5sb2coJ/Cfk4sgVG90YWwgZGF5cyByZWNlaXZlZDonLCBhdmFpbGFiaWxpdHlEYXRhLmxlbmd0aCk7XG4gICAgICBjb25zb2xlLmxvZygn8J+TiyBSYXcgYXZhaWxhYmlsaXR5IGRhdGE6JywgSlNPTi5zdHJpbmdpZnkoYXZhaWxhYmlsaXR5RGF0YSwgbnVsbCwgMikpO1xuICAgICAgXG4gICAgICAvLyBQcm9jZXNzIHRoZSBhdmFpbGFiaWxpdHkgZGF0YSB0byBleHRyYWN0IHJvb21zIGFuZCBwcmljZXNcbiAgICAgIGNvbnN0IHJvb21UeXBlcyA9IHtcbiAgICAgICAgJ2Nhc2EtcGxheWEnOiB7XG4gICAgICAgICAgcm9vbVR5cGVJZDogJ2Nhc2EtcGxheWEnLFxuICAgICAgICAgIHJvb21UeXBlTmFtZTogJ0Nhc2EgZGUgUGxheWEgKEN1YXJ0byBDb21wYXJ0aWRvKScsXG4gICAgICAgICAgbWF4R3Vlc3RzOiA4LFxuICAgICAgICAgIGNhdGVnb3JpZXM6IFtdIGFzIGFueVtdLFxuICAgICAgICAgIGF2YWlsYWJsZVJvb21zQnlEYXk6IFtdIGFzIG51bWJlcltdLFxuICAgICAgICAgIHByaWNlczogW10gYXMgbnVtYmVyW11cbiAgICAgICAgfSxcbiAgICAgICAgJ2Nhc2l0YXMtcHJpdmFkYXMnOiB7XG4gICAgICAgICAgcm9vbVR5cGVJZDogJ2Nhc2l0YXMtcHJpdmFkYXMnLFxuICAgICAgICAgIHJvb21UeXBlTmFtZTogJ0Nhc2l0YXMgUHJpdmFkYXMnLFxuICAgICAgICAgIG1heEd1ZXN0czogMixcbiAgICAgICAgICBjYXRlZ29yaWVzOiBbXSBhcyBhbnlbXSxcbiAgICAgICAgICBhdmFpbGFibGVSb29tc0J5RGF5OiBbXSBhcyBudW1iZXJbXSxcbiAgICAgICAgICBwcmljZXM6IFtdIGFzIG51bWJlcltdXG4gICAgICAgIH0sXG4gICAgICAgICdjYXNhcy1kZWx1eGUnOiB7XG4gICAgICAgICAgcm9vbVR5cGVJZDogJ2Nhc2FzLWRlbHV4ZScsXG4gICAgICAgICAgcm9vbVR5cGVOYW1lOiAnQ2FzYXMgRGVsdXhlJyxcbiAgICAgICAgICBtYXhHdWVzdHM6IDIsXG4gICAgICAgICAgY2F0ZWdvcmllczogW10gYXMgYW55W10sXG4gICAgICAgICAgYXZhaWxhYmxlUm9vbXNCeURheTogW10gYXMgbnVtYmVyW10sXG4gICAgICAgICAgcHJpY2VzOiBbXSBhcyBudW1iZXJbXVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgbnVtYmVyIG9mIG5pZ2h0cyAobm90IGRheXMpXG4gICAgICAvLyBGb3IgY2hlY2staW4gMTcvNyBhbmQgY2hlY2stb3V0IDE4LzcsIHdlIG9ubHkgbmVlZCB0byB2ZXJpZnkgbmlnaHQgb2YgMTcvN1xuICAgICAgY29uc3QgY2hlY2tJbkRhdGUgPSBuZXcgRGF0ZShjaGVja0luKTtcbiAgICAgIGNvbnN0IGNoZWNrT3V0RGF0ZSA9IG5ldyBEYXRlKGNoZWNrT3V0KTtcbiAgICAgIGNvbnN0IG5pZ2h0cyA9IE1hdGguY2VpbCgoY2hlY2tPdXREYXRlLmdldFRpbWUoKSAtIGNoZWNrSW5EYXRlLmdldFRpbWUoKSkgLyAoMTAwMCAqIDYwICogNjAgKiAyNCkpO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZyhg8J+ThSBDaGVjay1pbjogJHtjaGVja0lufSwgQ2hlY2stb3V0OiAke2NoZWNrT3V0fWApO1xuICAgICAgY29uc29sZS5sb2coYPCfk4UgTmlnaHRzIG5lZWRlZDogJHtuaWdodHN9YCk7XG4gICAgICBjb25zb2xlLmxvZyhg8J+ThSBXaWxsIG9ubHkgcHJvY2VzcyBmaXJzdCAke25pZ2h0c30gZGF5cyBmb3IgYXZhaWxhYmlsaXR5YCk7XG4gICAgICBcbiAgICAgIC8vIFRyYWNrIGluZGl2aWR1YWwgY2F0ZWdvcmllcyBmb3IgcHJvcGVyIGF2YWlsYWJpbGl0eSBjYWxjdWxhdGlvblxuICAgICAgY29uc3QgaW5kaXZpZHVhbENhdGVnb3JpZXM6IHsgW2tleTogc3RyaW5nXTogeyBhdmFpbGFibGVCeURheTogbnVtYmVyW10sIHByaWNlczogbnVtYmVyW10sIHJvb21UeXBlOiBzdHJpbmcgfSB9ID0ge307XG4gICAgICBcbiAgICAgIC8vIE9ubHkgcHJvY2VzcyB0aGUgZGF5cyB3ZSBuZWVkIChudW1iZXIgb2YgbmlnaHRzKVxuICAgICAgY29uc3QgZGF5c1RvUHJvY2VzcyA9IE1hdGgubWluKG5pZ2h0cywgYXZhaWxhYmlsaXR5RGF0YS5sZW5ndGgpO1xuICAgICAgYXZhaWxhYmlsaXR5RGF0YS5zbGljZSgwLCBkYXlzVG9Qcm9jZXNzKS5mb3JFYWNoKChkYXlEYXRhLCBkYXlJbmRleCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhg8J+ThSBQcm9jZXNzaW5nIGRheSAke2RheUluZGV4ICsgMX06ICR7ZGF5RGF0YS5kYXRlfWApO1xuICAgICAgICBcbiAgICAgICAgaWYgKGRheURhdGEuY2F0ZWdvcmllcyAmJiBBcnJheS5pc0FycmF5KGRheURhdGEuY2F0ZWdvcmllcykpIHtcbiAgICAgICAgICBkYXlEYXRhLmNhdGVnb3JpZXMuZm9yRWFjaCgoY2F0ZWdvcnk6IGFueSwgY2F0SW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYPCfj6AgPT09PT0gUFJPQ0VTU0lORyBDQVRFR09SWSAke2NhdEluZGV4ICsgMX0gPT09PT1gKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGDwn4+gIENhdGVnb3J5IElEOiAke2NhdGVnb3J5LmNhdGVnb3J5X2lkfWApO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYPCfj6AgQ2F0ZWdvcnkgbmFtZTogXCIke2NhdGVnb3J5Lm5hbWV9XCJgKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGDwn4+gIEF2YWlsYWJsZSByb29tczogJHtjYXRlZ29yeS5hdmFpbGFibGVfcm9vbXN9YCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhg8J+PoCBQcmljZXM6YCwgY2F0ZWdvcnkucHJpY2VzKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gTWFwIGNhdGVnb3JpZXMgdG8gb3VyIDMgYWNjb21tb2RhdGlvbiB0eXBlc1xuICAgICAgICAgICAgY29uc3QgY2F0ZWdvcnlOYW1lID0gKGNhdGVnb3J5Lm5hbWUgfHwgJycpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICBjb25zdCBzaW5nbGVQcmljZSA9IGNhdGVnb3J5LnByaWNlcz8uZmluZCgocDogYW55KSA9PiBwLnBlb3BsZSA9PT0gMSk/LnZhbHVlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBJbml0aWFsaXplIGNhdGVnb3J5IHRyYWNraW5nIGlmIG5vdCBleGlzdHNcbiAgICAgICAgICAgIGlmICghaW5kaXZpZHVhbENhdGVnb3JpZXNbY2F0ZWdvcnlOYW1lXSkge1xuICAgICAgICAgICAgICBpbmRpdmlkdWFsQ2F0ZWdvcmllc1tjYXRlZ29yeU5hbWVdID0ge1xuICAgICAgICAgICAgICAgIGF2YWlsYWJsZUJ5RGF5OiBuZXcgQXJyYXkobmlnaHRzKS5maWxsKDApLFxuICAgICAgICAgICAgICAgIHByaWNlczogW10sXG4gICAgICAgICAgICAgICAgcm9vbVR5cGU6ICcnXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFNldCBhdmFpbGFiaWxpdHkgZm9yIHRoaXMgZGF5XG4gICAgICAgICAgICBpbmRpdmlkdWFsQ2F0ZWdvcmllc1tjYXRlZ29yeU5hbWVdLmF2YWlsYWJsZUJ5RGF5W2RheUluZGV4XSA9IGNhdGVnb3J5LmF2YWlsYWJsZV9yb29tcyB8fCAwO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyAxLiBDQVNBIERFIFBMQVlBOiBTT0xPIFwiQ2FzYSBQbGF5YVwiIChsYXMgOCBjYW1hcyBkZW50cm8gZGUgQ2FzYSBQbGF5YSlcbiAgICAgICAgICAgIGlmIChjYXRlZ29yeU5hbWUgPT09ICdjYXNhIHBsYXlhJykge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygn4pyFIE1hdGNoZWQgYXMgQ2FzYSBkZSBQbGF5YSAoQ3VhcnRvIENvbXBhcnRpZG8pJyk7XG4gICAgICAgICAgICAgIHJvb21UeXBlc1snY2FzYS1wbGF5YSddLmNhdGVnb3JpZXMucHVzaChjYXRlZ29yeSk7XG4gICAgICAgICAgICAgIGluZGl2aWR1YWxDYXRlZ29yaWVzW2NhdGVnb3J5TmFtZV0ucm9vbVR5cGUgPSAnY2FzYS1wbGF5YSc7XG4gICAgICAgICAgICAgIC8vIFNvbG8gYWdyZWdhciBwcmVjaW8gc2kgaGF5IGRpc3BvbmliaWxpZGFkXG4gICAgICAgICAgICAgIGlmIChzaW5nbGVQcmljZSAmJiBzaW5nbGVQcmljZSA+IDAgJiYgKGNhdGVnb3J5LmF2YWlsYWJsZV9yb29tcyB8fCAwKSA+IDApIHtcbiAgICAgICAgICAgICAgICByb29tVHlwZXNbJ2Nhc2EtcGxheWEnXS5wcmljZXMucHVzaChzaW5nbGVQcmljZSk7XG4gICAgICAgICAgICAgICAgaW5kaXZpZHVhbENhdGVnb3JpZXNbY2F0ZWdvcnlOYW1lXS5wcmljZXMucHVzaChzaW5nbGVQcmljZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gMi4gQ0FTSVRBUyBQUklWQURBUzogU09MTyBjYXNpdGEgMywgY2FzaXRhIDQsIGNhc2l0YSA3XG4gICAgICAgICAgICBlbHNlIGlmIChjYXRlZ29yeU5hbWUgPT09ICdjYXNpdGEgMycgfHwgXG4gICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeU5hbWUgPT09ICdjYXNpdGEgNCcgfHwgXG4gICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeU5hbWUgPT09ICdjYXNpdGEgNycpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+KchSBNYXRjaGVkIGFzIENhc2l0YSBQcml2YWRhJyk7XG4gICAgICAgICAgICAgIHJvb21UeXBlc1snY2FzaXRhcy1wcml2YWRhcyddLmNhdGVnb3JpZXMucHVzaChjYXRlZ29yeSk7XG4gICAgICAgICAgICAgIGluZGl2aWR1YWxDYXRlZ29yaWVzW2NhdGVnb3J5TmFtZV0ucm9vbVR5cGUgPSAnY2FzaXRhcy1wcml2YWRhcyc7XG4gICAgICAgICAgICAgIC8vIFNvbG8gYWdyZWdhciBwcmVjaW8gc2kgaGF5IGRpc3BvbmliaWxpZGFkXG4gICAgICAgICAgICAgIGlmIChzaW5nbGVQcmljZSAmJiBzaW5nbGVQcmljZSA+IDAgJiYgKGNhdGVnb3J5LmF2YWlsYWJsZV9yb29tcyB8fCAwKSA+IDApIHtcbiAgICAgICAgICAgICAgICByb29tVHlwZXNbJ2Nhc2l0YXMtcHJpdmFkYXMnXS5wcmljZXMucHVzaChzaW5nbGVQcmljZSk7XG4gICAgICAgICAgICAgICAgaW5kaXZpZHVhbENhdGVnb3JpZXNbY2F0ZWdvcnlOYW1lXS5wcmljZXMucHVzaChzaW5nbGVQcmljZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gMy4gQ0FTQVMgREVMVVhFOiBTT0xPIFN0dWRpbyAxLCBTdHVkaW8gMiwgQ2FzaXRhIDUsIENhc2l0YSA2XG4gICAgICAgICAgICBlbHNlIGlmIChjYXRlZ29yeU5hbWUgPT09ICdzdHVkaW8gMScgfHwgXG4gICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeU5hbWUgPT09ICdzdHVkaW8gMicgfHwgXG4gICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeU5hbWUgPT09ICdjYXNpdGEgNScgfHwgXG4gICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeU5hbWUgPT09ICdjYXNpdGEgNicpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+KchSBNYXRjaGVkIGFzIENhc2EgRGVsdXhlJyk7XG4gICAgICAgICAgICAgIHJvb21UeXBlc1snY2FzYXMtZGVsdXhlJ10uY2F0ZWdvcmllcy5wdXNoKGNhdGVnb3J5KTtcbiAgICAgICAgICAgICAgaW5kaXZpZHVhbENhdGVnb3JpZXNbY2F0ZWdvcnlOYW1lXS5yb29tVHlwZSA9ICdjYXNhcy1kZWx1eGUnO1xuICAgICAgICAgICAgICAvLyBTb2xvIGFncmVnYXIgcHJlY2lvIHNpIGhheSBkaXNwb25pYmlsaWRhZFxuICAgICAgICAgICAgICBpZiAoc2luZ2xlUHJpY2UgJiYgc2luZ2xlUHJpY2UgPiAwICYmIChjYXRlZ29yeS5hdmFpbGFibGVfcm9vbXMgfHwgMCkgPiAwKSB7XG4gICAgICAgICAgICAgICAgcm9vbVR5cGVzWydjYXNhcy1kZWx1eGUnXS5wcmljZXMucHVzaChzaW5nbGVQcmljZSk7XG4gICAgICAgICAgICAgICAgaW5kaXZpZHVhbENhdGVnb3JpZXNbY2F0ZWdvcnlOYW1lXS5wcmljZXMucHVzaChzaW5nbGVQcmljZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gNC4gQ0FURUdPUsONQVMgTk8gVsOBTElEQVMgXG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coYOKdjCBDQVRFR09SWSBOT1QgSU5DTFVERUQ6IFwiJHtjYXRlZ29yeS5uYW1lfVwiYCk7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGDinYwgVGhpcyBjYXRlZ29yeSBpcyBub3QgcGFydCBvZiB0aGUgdmFsaWQgYWNjb21tb2RhdGlvbiB0eXBlc2ApO1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhg4p2MIE9ubHkgdGhlc2UgY2F0ZWdvcmllcyBhcmUgdmFsaWQ6YCk7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGAgICAtIENhc2EgZGUgUGxheWE6IFwiQ2FzYSBQbGF5YVwiYCk7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGAgICAtIENhc2l0YXMgUHJpdmFkYXM6IFwiQ2FzaXRhIDNcIiwgXCJDYXNpdGEgNFwiLCBcIkNhc2l0YSA3XCJgKTtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coYCAgIC0gQ2FzYXMgRGVsdXhlOiBcIlN0dWRpbyAxXCIsIFwiU3R1ZGlvIDJcIiwgXCJDYXNpdGEgNVwiLCBcIkNhc2l0YSA2XCJgKTtcbiAgICAgICAgICAgICAgLy8gQ29udGludWUgcHJvY2Vzc2luZyBidXQgZG9uJ3QgaW5jbHVkZSB0aGlzIGNhdGVnb3J5XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgdG90YWwgYXZhaWxhYmlsaXR5IGZvciBlYWNoIHJvb20gdHlwZSB1c2luZyBjb3JyZWN0IGxvZ2ljXG4gICAgICBPYmplY3Qua2V5cyhyb29tVHlwZXMpLmZvckVhY2gocm9vbVR5cGVLZXkgPT4ge1xuICAgICAgICBjb25zdCByb29tVHlwZSA9IHJvb21UeXBlc1tyb29tVHlwZUtleSBhcyBrZXlvZiB0eXBlb2Ygcm9vbVR5cGVzXTtcbiAgICAgICAgbGV0IHRvdGFsQXZhaWxhYmxlRm9yQWxsRGF5cyA9IDA7XG4gICAgICAgIFxuICAgICAgICAvLyBGaW5kIGFsbCBjYXRlZ29yaWVzIHRoYXQgYmVsb25nIHRvIHRoaXMgcm9vbSB0eXBlXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGluZGl2aWR1YWxDYXRlZ29yaWVzKS5mb3JFYWNoKChbY2F0ZWdvcnlOYW1lLCBjYXRlZ29yeURhdGFdKSA9PiB7XG4gICAgICAgICAgaWYgKGNhdGVnb3J5RGF0YS5yb29tVHlwZSA9PT0gcm9vbVR5cGVLZXkpIHtcbiAgICAgICAgICAgIC8vIEZvciBlYWNoIGluZGl2aWR1YWwgY2F0ZWdvcnksIGNhbGN1bGF0ZSBtaW5pbXVtIGF2YWlsYWJsZSBhY3Jvc3MgYWxsIGRheXNcbiAgICAgICAgICAgIGNvbnN0IG1pbkF2YWlsYWJsZUZvckNhdGVnb3J5ID0gY2F0ZWdvcnlEYXRhLmF2YWlsYWJsZUJ5RGF5Lmxlbmd0aCA+IDAgPyBcbiAgICAgICAgICAgICAgTWF0aC5taW4oLi4uY2F0ZWdvcnlEYXRhLmF2YWlsYWJsZUJ5RGF5KSA6IDA7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGDwn4+gIENhdGVnb3J5IFwiJHtjYXRlZ29yeU5hbWV9XCIgLSBEYXlzOiBbJHtjYXRlZ29yeURhdGEuYXZhaWxhYmxlQnlEYXkuam9pbignLCAnKX1dIC0gTWluOiAke21pbkF2YWlsYWJsZUZvckNhdGVnb3J5fWApO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBBZGQgdGhpcyBjYXRlZ29yeSdzIG1pbmltdW0gdG8gdGhlIHRvdGFsXG4gICAgICAgICAgICB0b3RhbEF2YWlsYWJsZUZvckFsbERheXMgKz0gbWluQXZhaWxhYmxlRm9yQ2F0ZWdvcnk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIFNldCB0aGUgY2FsY3VsYXRlZCBhdmFpbGFiaWxpdHlcbiAgICAgICAgcm9vbVR5cGUuYXZhaWxhYmxlUm9vbXNCeURheSA9IFt0b3RhbEF2YWlsYWJsZUZvckFsbERheXNdOyAvLyBTaW5nbGUgdmFsdWUgcmVwcmVzZW50aW5nIHRvdGFsIGF2YWlsYWJsZVxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYPCfjq8gJHtyb29tVHlwZUtleX0gLSBUb3RhbCBhdmFpbGFibGUgZm9yIGFsbCBkYXlzOiAke3RvdGFsQXZhaWxhYmxlRm9yQWxsRGF5c31gKTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyBDb252ZXJ0IGdyb3VwZWQgZGF0YSB0byBmaW5hbCBmb3JtYXRcbiAgICAgIGNvbnN0IGF2YWlsYWJsZVJvb21zOiBhbnlbXSA9IFtdO1xuICAgICAgXG4gICAgICAvLyBBTFdBWVMgcmV0dXJuIGFsbCAzIGFjY29tbW9kYXRpb24gdHlwZXMsIGV2ZW4gaWYgbm90IGF2YWlsYWJsZVxuICAgICAgT2JqZWN0LmVudHJpZXMocm9vbVR5cGVzKS5mb3JFYWNoKChba2V5LCByb29tVHlwZV0pID0+IHtcbiAgICAgICAgLy8gQ2FsY3VsYXRlIHJlcHJlc2VudGF0aXZlIHByaWNlIChtZWRpYW4gb3IgbW9zdCBjb21tb24pXG4gICAgICAgIGxldCBmaW5hbFByaWNlID0gbnVsbDtcbiAgICAgICAgXG4gICAgICAgIGlmIChyb29tVHlwZS5wcmljZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgIC8vIFVzZSB0aGUgc3BlY2lhbCBwcmljZSBmb3IgXCJDYXNhIFBsYXlhXCIgaWYgaXQgZXhpc3RzXG4gICAgICAgICAgaWYgKGtleSA9PT0gJ2Nhc2EtcGxheWEnKSB7XG4gICAgICAgICAgICBjb25zdCBjYXNhUGxheWFQcmljZSA9IHJvb21UeXBlLnByaWNlcy5maW5kKHAgPT4gcCA9PT0gMjApO1xuICAgICAgICAgICAgaWYgKGNhc2FQbGF5YVByaWNlKSB7XG4gICAgICAgICAgICAgIGZpbmFsUHJpY2UgPSBjYXNhUGxheWFQcmljZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIC8vIFVzZSBtZWRpYW4gcHJpY2VcbiAgICAgICAgICAgICAgY29uc3Qgc29ydGVkUHJpY2VzID0gcm9vbVR5cGUucHJpY2VzLnNvcnQoKGEsIGIpID0+IGEgLSBiKTtcbiAgICAgICAgICAgICAgZmluYWxQcmljZSA9IHNvcnRlZFByaWNlc1tNYXRoLmZsb29yKHNvcnRlZFByaWNlcy5sZW5ndGggLyAyKV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIFVzZSBtZWRpYW4gcHJpY2UgZm9yIG90aGVyIHR5cGVzXG4gICAgICAgICAgICBjb25zdCBzb3J0ZWRQcmljZXMgPSByb29tVHlwZS5wcmljZXMuc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICAgICAgICAgICAgZmluYWxQcmljZSA9IHNvcnRlZFByaWNlc1tNYXRoLmZsb29yKHNvcnRlZFByaWNlcy5sZW5ndGggLyAyKV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBBZGQgcm9vbSB0eXBlIHJlZ2FyZGxlc3Mgb2YgYXZhaWxhYmlsaXR5XG4gICAgICAgIGNvbnN0IHRvdGFsQXZhaWxhYmxlID0gcm9vbVR5cGUuYXZhaWxhYmxlUm9vbXNCeURheS5sZW5ndGggPiAwID8gcm9vbVR5cGUuYXZhaWxhYmxlUm9vbXNCeURheVswXSA6IDA7XG4gICAgICAgIFxuICAgICAgICBhdmFpbGFibGVSb29tcy5wdXNoKHtcbiAgICAgICAgICByb29tVHlwZUlkOiByb29tVHlwZS5yb29tVHlwZUlkLFxuICAgICAgICAgIHJvb21UeXBlTmFtZTogcm9vbVR5cGUucm9vbVR5cGVOYW1lLFxuICAgICAgICAgIHByaWNlUGVyTmlnaHQ6IGZpbmFsUHJpY2UsXG4gICAgICAgICAgcmVhbFByaWNlOiBmaW5hbFByaWNlLFxuICAgICAgICAgIHByaWNlU291cmNlOiBmaW5hbFByaWNlID8gJ0xPQkJZUE1TX0FWQUlMQUJMRV9ST09NU19BUEknIDogbnVsbCxcbiAgICAgICAgICBtYXhHdWVzdHM6IHJvb21UeXBlLm1heEd1ZXN0cyxcbiAgICAgICAgICBhdmFpbGFibGVSb29tczogdG90YWxBdmFpbGFibGUsXG4gICAgICAgICAgYXZhaWxhYmxlOiB0b3RhbEF2YWlsYWJsZSA+IDAsXG4gICAgICAgICAgZGVidWc6IHtcbiAgICAgICAgICAgIG9yaWdpbmFsQ2F0ZWdvcnk6IHJvb21UeXBlLmNhdGVnb3JpZXNbMF0gfHwgbnVsbCwgLy8gRmlyc3QgY2F0ZWdvcnkgYXMgZXhhbXBsZSAobnVsbCBpZiBub25lKVxuICAgICAgICAgICAgc291cmNlOiAnYXZhaWxhYmxlLXJvb21zLWVuZHBvaW50JyxcbiAgICAgICAgICAgIGFsbENhdGVnb3JpZXM6IHJvb21UeXBlLmNhdGVnb3JpZXMubWFwKGMgPT4gYy5uYW1lKSxcbiAgICAgICAgICAgIGFsbFByaWNlczogcm9vbVR5cGUucHJpY2VzLFxuICAgICAgICAgICAgYXZhaWxhYmxlUm9vbXNCeURheTogcm9vbVR5cGUuYXZhaWxhYmxlUm9vbXNCeURheSxcbiAgICAgICAgICAgIG1pbkF2YWlsYWJsZVJvb21zOiB0b3RhbEF2YWlsYWJsZVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcblxuICAgICAgY29uc29sZS5sb2coJ/Cfjq8gPT09PT0gRklOQUwgUkVTVUxUIFdJVEggUkVBTCBQUklDRVMgPT09PT0nKTtcbiAgICAgIGNvbnNvbGUubG9nKCfwn46vIEF2YWlsYWJsZSByb29tczonLCBhdmFpbGFibGVSb29tcy5sZW5ndGgpO1xuICAgICAgYXZhaWxhYmxlUm9vbXMuZm9yRWFjaCgocm9vbSwgaW5kZXgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coYPCfj6AgJHtpbmRleCArIDF9LiAke3Jvb20ucm9vbVR5cGVOYW1lfTpgKTtcbiAgICAgICAgY29uc29sZS5sb2coYCAgIPCfkrAgUmVhbCBQcmljZTogJCR7cm9vbS5yZWFsUHJpY2V9ICgke3Jvb20ucHJpY2VTb3VyY2UgfHwgJ05PX1BSSUNFJ30pYCk7XG4gICAgICAgIGNvbnNvbGUubG9nKGAgICDwn5uP77iPIEF2YWlsYWJsZTogJHtyb29tLmF2YWlsYWJsZVJvb21zfSAobWluIGFjcm9zcyBkYXlzKWApO1xuICAgICAgICBjb25zb2xlLmxvZyhgICAg8J+ThSBCeSBkYXk6IFske3Jvb20uZGVidWcuYXZhaWxhYmxlUm9vbXNCeURheS5qb2luKCcsICcpfV1gKTtcbiAgICAgICAgY29uc29sZS5sb2coYCAgIPCfk4ogQWxsIHByaWNlczogWyR7cm9vbS5kZWJ1Zy5hbGxQcmljZXMuam9pbignLCAnKX1dYCk7XG4gICAgICAgIGNvbnNvbGUubG9nKGAgICDwn4+377iPIENhdGVnb3JpZXM6IFske3Jvb20uZGVidWcuYWxsQ2F0ZWdvcmllcy5qb2luKCcsICcpfV1gKTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoYXZhaWxhYmxlUm9vbXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIGVycm9yOiAnTm8gcm9vbXMgYXZhaWxhYmxlIGZvciB0aGUgc2VsZWN0ZWQgZGF0ZXMnLFxuICAgICAgICAgIGRlYnVnOiB7XG4gICAgICAgICAgICB0b3RhbERheXNQcm9jZXNzZWQ6IGF2YWlsYWJpbGl0eURhdGEubGVuZ3RoLFxuICAgICAgICAgICAgYXZhaWxhYmlsaXR5RGF0YTogYXZhaWxhYmlsaXR5RGF0YSxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdObyBtYXRjaGluZyByb29tIGNhdGVnb3JpZXMgZm91bmQnXG4gICAgICAgICAgfVxuICAgICAgICB9LCB7IHN0YXR1czogNDA0IH0pO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGF2YWlsYWJsZTogdHJ1ZSxcbiAgICAgICAgbWF4R3Vlc3RzOiAxMixcbiAgICAgICAgYXZhaWxhYmxlUm9vbXM6IGF2YWlsYWJsZVJvb21zLFxuICAgICAgICBkZWJ1Zzoge1xuICAgICAgICAgIHRvdGFsRGF5c0Zyb21BUEk6IGF2YWlsYWJpbGl0eURhdGEubGVuZ3RoLFxuICAgICAgICAgIGVuZHBvaW50VXNlZDogJy9hdmFpbGFibGUtcm9vbXMnLFxuICAgICAgICAgIHByaWNlQW5hbHlzaXM6IGF2YWlsYWJsZVJvb21zLm1hcChyID0+ICh7XG4gICAgICAgICAgICByb29tOiByLnJvb21UeXBlTmFtZSxcbiAgICAgICAgICAgIHByaWNlOiByLnByaWNlUGVyTmlnaHQsXG4gICAgICAgICAgICByZWFsUHJpY2U6IHIucmVhbFByaWNlLFxuICAgICAgICAgICAgc291cmNlOiByLnByaWNlU291cmNlXG4gICAgICAgICAgfSkpXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vIEVsaW1pbmFyIHRvZGEgbGEgbMOzZ2ljYSBkZSBlbnbDrW8gZGUgV2hhdHNBcHAgYXF1w61cbiAgICAgIC8vIFNvbG8gZGV2b2x2ZXIgbGEgcmVzcHVlc3RhIG5vcm1hbG1lbnRlXG4gICAgICBjb25zb2xlLmxvZygn8J+TpCBSZXR1cm5pbmcgcmVzdWx0IHdpdGggUkVBTCBwcmljZXMgZnJvbSBjb3JyZWN0IGVuZHBvaW50OicsIEpTT04uc3RyaW5naWZ5KHJlc3VsdCwgbnVsbCwgMikpO1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHJlc3VsdCk7XG5cbiAgICB9IGNhdGNoIChhcGlFcnJvcjogYW55KSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgTG9iYnlQTVMgQVBJIGVycm9yOicsIGFwaUVycm9yLm1lc3NhZ2UpO1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIEZ1bGwgZXJyb3IgZGV0YWlsczonLCB7XG4gICAgICAgIG1lc3NhZ2U6IGFwaUVycm9yLm1lc3NhZ2UsXG4gICAgICAgIG5hbWU6IGFwaUVycm9yLm5hbWUsXG4gICAgICAgIHN0YWNrOiBhcGlFcnJvci5zdGFjayxcbiAgICAgICAgcmVzcG9uc2U6IGFwaUVycm9yLnJlc3BvbnNlPy5kYXRhXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gRGV0ZXJtaW5lIGlmIHRoaXMgaXMgYW4gSFRNTCByZXNwb25zZSBlcnJvclxuICAgICAgY29uc3QgaXNIdG1sRXJyb3IgPSBhcGlFcnJvci5tZXNzYWdlICYmIGFwaUVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ0hUTUwnKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiBpc0h0bWxFcnJvciBcbiAgICAgICAgICA/ICdMb2JieVBNUyBBUEkgZXN0w6EgZGV2b2x2aWVuZG8gSFRNTCBlbiBsdWdhciBkZSBKU09OIC0gcG9zaWJsZSBwcm9ibGVtYSBkZSBJUCBvIGF1dGVudGljYWNpw7NuJyBcbiAgICAgICAgICA6ICdFcnJvciBkZSBjb25leGnDs24gY29uIExvYmJ5UE1TJyxcbiAgICAgICAgZGVidWc6IHtcbiAgICAgICAgICBlcnJvclR5cGU6IGFwaUVycm9yLm5hbWUsXG4gICAgICAgICAgbWVzc2FnZTogYXBpRXJyb3IubWVzc2FnZSxcbiAgICAgICAgICBzdWdnZXN0aW9uOiBpc0h0bWxFcnJvciBcbiAgICAgICAgICAgID8gJ1ZlcmlmaWNhIHF1ZSB0dSBJUCBlc3TDoSBhdXRvcml6YWRhIGVuIExvYmJ5UE1TIHkgcXVlIGVsIEFQSSB0b2tlbiBlcyB2w6FsaWRvJ1xuICAgICAgICAgICAgOiAnRW5kcG9pbnQgL2F2YWlsYWJsZS1yb29tcyBmYWlsZWQgLSBjaGVjayBBUEkgY3JlZGVudGlhbHMgYW5kIElQIGF1dGhvcml6YXRpb24nLFxuICAgICAgICAgIGVuZHBvaW50VXNlZDogJy9hdmFpbGFibGUtcm9vbXMnLFxuICAgICAgICAgIGlzSHRtbEVycm9yOiBpc0h0bWxFcnJvcixcbiAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgICB9XG4gICAgICB9LCB7IHN0YXR1czogNTAzIH0pO1xuICAgIH1cblxuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIEdlbmVyYWwgYXZhaWxhYmlsaXR5IGVycm9yOicsIGVycm9yKTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnRXJyb3IgY2hlY2tpbmcgYXZhaWxhYmlsaXR5JyxcbiAgICAgIGRldGFpbHM6IGVycm9yLm1lc3NhZ2VcbiAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59ICJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJsb2JieVBNU0NsaWVudCIsInNlbnRXaGF0c0FwcFNldCIsIlNldCIsIlBPU1QiLCJyZXF1ZXN0IiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJqc29uIiwiY2hlY2tJbiIsImNoZWNrT3V0IiwiZ3Vlc3RzIiwiYXZhaWxhYmlsaXR5RGF0YSIsImdldEF2YWlsYWJsZVJvb21zIiwic3RhcnRfZGF0ZSIsImVuZF9kYXRlIiwibGVuZ3RoIiwiSlNPTiIsInN0cmluZ2lmeSIsInJvb21UeXBlcyIsInJvb21UeXBlSWQiLCJyb29tVHlwZU5hbWUiLCJtYXhHdWVzdHMiLCJjYXRlZ29yaWVzIiwiYXZhaWxhYmxlUm9vbXNCeURheSIsInByaWNlcyIsImNoZWNrSW5EYXRlIiwiRGF0ZSIsImNoZWNrT3V0RGF0ZSIsIm5pZ2h0cyIsIk1hdGgiLCJjZWlsIiwiZ2V0VGltZSIsImluZGl2aWR1YWxDYXRlZ29yaWVzIiwiZGF5c1RvUHJvY2VzcyIsIm1pbiIsInNsaWNlIiwiZm9yRWFjaCIsImRheURhdGEiLCJkYXlJbmRleCIsImRhdGUiLCJBcnJheSIsImlzQXJyYXkiLCJjYXRlZ29yeSIsImNhdEluZGV4IiwiY2F0ZWdvcnlfaWQiLCJuYW1lIiwiYXZhaWxhYmxlX3Jvb21zIiwiY2F0ZWdvcnlOYW1lIiwidG9Mb3dlckNhc2UiLCJzaW5nbGVQcmljZSIsImZpbmQiLCJwIiwicGVvcGxlIiwidmFsdWUiLCJhdmFpbGFibGVCeURheSIsImZpbGwiLCJyb29tVHlwZSIsInB1c2giLCJPYmplY3QiLCJrZXlzIiwicm9vbVR5cGVLZXkiLCJ0b3RhbEF2YWlsYWJsZUZvckFsbERheXMiLCJlbnRyaWVzIiwiY2F0ZWdvcnlEYXRhIiwibWluQXZhaWxhYmxlRm9yQ2F0ZWdvcnkiLCJqb2luIiwiYXZhaWxhYmxlUm9vbXMiLCJrZXkiLCJmaW5hbFByaWNlIiwiY2FzYVBsYXlhUHJpY2UiLCJzb3J0ZWRQcmljZXMiLCJzb3J0IiwiYSIsImIiLCJmbG9vciIsInRvdGFsQXZhaWxhYmxlIiwicHJpY2VQZXJOaWdodCIsInJlYWxQcmljZSIsInByaWNlU291cmNlIiwiYXZhaWxhYmxlIiwiZGVidWciLCJvcmlnaW5hbENhdGVnb3J5Iiwic291cmNlIiwiYWxsQ2F0ZWdvcmllcyIsIm1hcCIsImMiLCJhbGxQcmljZXMiLCJtaW5BdmFpbGFibGVSb29tcyIsInJvb20iLCJpbmRleCIsInN1Y2Nlc3MiLCJlcnJvciIsInRvdGFsRGF5c1Byb2Nlc3NlZCIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJyZXN1bHQiLCJ0b3RhbERheXNGcm9tQVBJIiwiZW5kcG9pbnRVc2VkIiwicHJpY2VBbmFseXNpcyIsInIiLCJwcmljZSIsImFwaUVycm9yIiwic3RhY2siLCJyZXNwb25zZSIsImRhdGEiLCJpc0h0bWxFcnJvciIsImluY2x1ZGVzIiwiZXJyb3JUeXBlIiwic3VnZ2VzdGlvbiIsInRpbWVzdGFtcCIsInRvSVNPU3RyaW5nIiwiZGV0YWlscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/availability/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/lobbypms.ts":
/*!*************************!*\
  !*** ./lib/lobbypms.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LobbyPMSClient: () => (/* binding */ LobbyPMSClient),\n/* harmony export */   lobbyPMSClient: () => (/* binding */ lobbyPMSClient)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n\n// LobbyPMS API Configuration - REAL CREDENTIALS\nconst LOBBYPMS_BASE_URL = process.env.LOBBYPMS_BASE_URL || \"https://api.lobbypms.com/api/v1\";\nconst LOBBYPMS_API_TOKEN = process.env.LOBBYPMS_API_TOKEN || \"JNjeoLeXxTHFQSwUPQCgwBnCZktRVv7pfQ48uz2tyoNu6K9dW6D2US1cN9Mu\";\nclass LobbyPMSClient {\n    constructor(baseURL = LOBBYPMS_BASE_URL, apiToken = LOBBYPMS_API_TOKEN){\n        this.baseURL = baseURL;\n        this.apiToken = apiToken;\n    }\n    buildURL(endpoint, additionalParams) {\n        // Remove leading slash from endpoint if present to avoid replacing the entire path\n        const cleanEndpoint = endpoint.startsWith(\"/\") ? endpoint.slice(1) : endpoint;\n        // Ensure baseURL ends with slash for proper concatenation\n        const baseUrl = this.baseURL.endsWith(\"/\") ? this.baseURL : this.baseURL + \"/\";\n        const url = new URL(cleanEndpoint, baseUrl);\n        url.searchParams.set(\"api_token\", this.apiToken);\n        if (additionalParams) {\n            Object.entries(additionalParams).forEach(([key, value])=>{\n                url.searchParams.set(key, value);\n            });\n        }\n        console.log(\"\\uD83D\\uDD27 URL BUILD DEBUG:\", {\n            originalEndpoint: endpoint,\n            cleanEndpoint: cleanEndpoint,\n            baseUrl: baseUrl,\n            finalUrl: url.toString()\n        });\n        return url.toString();\n    }\n    /**\n   * Get available rooms\n   */ async getRooms(params) {\n        try {\n            const finalUrl = this.buildURL(\"/rooms\", params);\n            console.log(\"\\uD83D\\uDD0D ===== URL CONSTRUCTION ANALYSIS =====\");\n            console.log(\"\\uD83D\\uDD0D Base URL:\", this.baseURL);\n            console.log(\"\\uD83D\\uDD0D API Token:\", this.apiToken);\n            console.log(\"\\uD83D\\uDD0D Endpoint:\", \"/rooms\");\n            console.log(\"\\uD83D\\uDD0D Params:\", params);\n            console.log(\"\\uD83D\\uDD0D Final constructed URL:\", finalUrl);\n            console.log(\"\\uD83D\\uDD0D ===== COMPARISON =====\");\n            console.log(\"\\uD83D\\uDD0D Working Postman URL: https://api.lobbypms.com/api/v1/rooms?api_token=JNjeoLeXxTHFQSwUPQCgwBnCZktRVv7pfQ48uz2tyoNu6K9dW6D2US1cN9Mu\");\n            console.log(\"\\uD83D\\uDD0D App constructed URL:\", finalUrl);\n            console.log(\"\\uD83D\\uDD0D URLs match:\", finalUrl === \"https://api.lobbypms.com/api/v1/rooms?api_token=JNjeoLeXxTHFQSwUPQCgwBnCZktRVv7pfQ48uz2tyoNu6K9dW6D2US1cN9Mu\");\n            // First try with params, then without if no results\n            let response;\n            let responseData;\n            try {\n                console.log(\"\\uD83D\\uDE80 Making request to:\", finalUrl);\n                response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(finalUrl, {\n                    timeout: 10000,\n                    headers: {\n                        \"Accept\": \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                        \"User-Agent\": \"SurfCampSantaTeresa/1.0\"\n                    }\n                });\n                responseData = response.data;\n                console.log(\"\\uD83D\\uDCE5 Response received - Status:\", response.status);\n                console.log(\"\\uD83D\\uDCE5 Response Content-Type:\", response.headers[\"content-type\"]);\n                console.log(\"\\uD83D\\uDCE5 Response Data Type:\", typeof responseData);\n                console.log(\"\\uD83D\\uDCE5 Response Size:\", JSON.stringify(responseData).length, \"characters\");\n                // Check if response is HTML\n                if (typeof responseData === \"string\" && responseData.includes(\"<!doctype html>\")) {\n                    console.log(\"\\uD83D\\uDEA8 ===== CRITICAL ERROR: HTML RESPONSE =====\");\n                    console.log(\"\\uD83D\\uDEA8 Expected: JSON data\");\n                    console.log(\"\\uD83D\\uDEA8 Received: HTML page\");\n                    console.log(\"\\uD83D\\uDEA8 This means the API endpoint is not working correctly\");\n                    console.log(\"\\uD83D\\uDEA8 Possible causes:\");\n                    console.log(\"   1. Wrong API endpoint URL\");\n                    console.log(\"   2. Invalid API token\");\n                    console.log(\"   3. API server routing issue\");\n                    console.log(\"   4. Authentication/authorization problem\");\n                    console.log(\"\\uD83D\\uDEA8 HTML content (first 300 chars):\", responseData.substring(0, 300));\n                    // Extract title from HTML for debugging\n                    const titleMatch = responseData.match(/<title>(.*?)<\\/title>/);\n                    if (titleMatch) {\n                        console.log(\"\\uD83D\\uDEA8 HTML Page Title:\", titleMatch[1]);\n                    }\n                    throw new Error(\"LobbyPMS API returned HTML instead of JSON. This indicates an API endpoint or authentication issue.\");\n                }\n                console.log(\"✅ Valid JSON response received\");\n            } catch (requestError) {\n                console.error(\"❌ Request failed:\", {\n                    message: requestError.message,\n                    status: requestError.response?.status,\n                    statusText: requestError.response?.statusText,\n                    url: finalUrl,\n                    responseType: typeof requestError.response?.data,\n                    responseLength: requestError.response?.data?.length || 0\n                });\n                // If we had parameters, try without them as fallback\n                if (params && Object.keys(params).length > 0) {\n                    console.log(\"\\uD83D\\uDD04 Trying without parameters as fallback...\");\n                    const fallbackUrl = this.buildURL(\"/rooms\");\n                    console.log(\"\\uD83D\\uDD04 Fallback URL:\", fallbackUrl);\n                    response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(fallbackUrl, {\n                        timeout: 10000,\n                        headers: {\n                            \"Accept\": \"application/json\",\n                            \"Content-Type\": \"application/json\",\n                            \"User-Agent\": \"SurfCampSantaTeresa/1.0\"\n                        }\n                    });\n                    responseData = response.data;\n                    console.log(\"\\uD83D\\uDCE5 Fallback response - Status:\", response.status);\n                    console.log(\"\\uD83D\\uDCE5 Fallback response - Content-Type:\", response.headers[\"content-type\"]);\n                    console.log(\"\\uD83D\\uDCE5 Fallback response - Data Type:\", typeof responseData);\n                    if (typeof responseData === \"string\" && responseData.includes(\"<!doctype html>\")) {\n                        console.log(\"\\uD83D\\uDEA8 Fallback also returned HTML - API endpoint is definitely broken\");\n                        throw new Error(\"LobbyPMS API consistently returns HTML instead of JSON. API endpoint is not working.\");\n                    }\n                } else {\n                    throw requestError;\n                }\n            }\n            console.log(\"\\uD83D\\uDCE5 LobbyPMS ROOMS API SUMMARY:\");\n            console.log(\"   Status Code:\", response.status);\n            console.log(\"   Content-Type:\", response.headers[\"content-type\"]);\n            console.log(\"   Response Type:\", typeof responseData);\n            console.log(\"   Response Size:\", JSON.stringify(responseData).length, \"characters\");\n            console.log(\"   Has .data property:\", !!(responseData && \"data\" in responseData));\n            console.log(\"   Categories count:\", responseData?.data?.length || 0);\n            console.log(\"   \\uD83D\\uDD0D REQUEST URL:\", this.buildURL(\"/rooms\", params));\n            console.log(\"   \\uD83D\\uDD0D REQUEST PARAMS:\", params);\n            console.log(\"   \\uD83D\\uDD0D API TOKEN (last 8 chars):\", this.apiToken.slice(-8));\n            // Check if we got HTML instead of JSON\n            if (typeof responseData === \"string\" && responseData.includes(\"<!doctype html>\")) {\n                console.log(\"❌ CRITICAL: API returned HTML page instead of JSON data\");\n                console.log(\"❌ This usually means:\");\n                console.log(\"   1. Wrong API endpoint URL\");\n                console.log(\"   2. Invalid API token\");\n                console.log(\"   3. API server is down\");\n                console.log(\"   4. Rate limiting or IP blocking\");\n                console.log(\"❌ HTML Title:\", responseData.match(/<title>(.*?)<\\/title>/)?.[1] || \"No title found\");\n            }\n            // Handle the actual API structure: {data: [categories]}\n            const categories = responseData?.data || [];\n            console.log(\"\\uD83D\\uDCCA Extracted categories:\", categories.length);\n            if (categories.length > 0) {\n                console.log(\"\\uD83D\\uDCCA First category structure:\", JSON.stringify(categories[0], null, 2));\n            }\n            const rooms = [];\n            // Extract rooms from each category\n            categories.forEach((category, index)=>{\n                console.log(`🏠 Processing category ${index + 1}:`, {\n                    id: category.category_id,\n                    name: category.name,\n                    capacity: category.capacity,\n                    quantity: category.quantity,\n                    roomsCount: category.rooms?.length || 0\n                });\n                if (category.rooms && Array.isArray(category.rooms)) {\n                    // Add the category as a room type - NO FALLBACK PRICES\n                    const room = {\n                        id: category.category_id?.toString() || \"\",\n                        name: category.name || \"Unknown Room\",\n                        room_type_id: category.category_id?.toString() || \"\",\n                        room_type_name: category.name || \"Unknown Room\",\n                        available_rooms: category.quantity || 1,\n                        capacity: category.capacity || 2,\n                        price_per_night: undefined,\n                        rate: undefined // NO fallback - use real data only\n                    };\n                    console.log(`✅ Added room:`, room);\n                    rooms.push(room);\n                } else {\n                    console.log(`❌ Category ${category.name} has no valid rooms array`);\n                }\n            });\n            console.log(\"\\uD83C\\uDFAF Final rooms array:\", rooms.length, \"rooms\");\n            return rooms;\n        } catch (error) {\n            console.error(\"❌ LobbyPMS getRooms DETAILED ERROR:\", {\n                message: error.message,\n                status: error.response?.status,\n                statusText: error.response?.statusText,\n                headers: error.response?.headers,\n                data: typeof error.response?.data === \"string\" ? error.response.data.substring(0, 200) : error.response?.data,\n                stack: error.stack,\n                url: this.buildURL(\"/rooms\", params),\n                config: {\n                    baseURL: this.baseURL,\n                    tokenLastChars: this.apiToken.slice(-8),\n                    paramsUsed: params\n                }\n            });\n            // Create specific error message based on the error type\n            let specificError = `LobbyPMS API Error: ${error.message}`;\n            if (error.response?.status === 401) {\n                specificError = \"Error de autenticaci\\xf3n: Token API inv\\xe1lido o expirado\";\n            } else if (error.response?.status === 403) {\n                specificError = \"Error de permisos: No tienes acceso a este recurso\";\n            } else if (error.response?.status === 404) {\n                specificError = \"Error de endpoint: La URL del API no es correcta\";\n            } else if (error.response?.status === 429) {\n                specificError = \"Error de l\\xedmite: Demasiadas solicitudes, intenta m\\xe1s tarde\";\n            } else if (error.response?.status >= 500) {\n                specificError = \"Error del servidor: El servidor de LobbyPMS est\\xe1 experimentando problemas\";\n            } else if (error.code === \"ECONNREFUSED\") {\n                specificError = \"Error de conexi\\xf3n: No se puede conectar al servidor de LobbyPMS\";\n            } else if (error.code === \"ENOTFOUND\") {\n                specificError = \"Error de DNS: No se puede resolver la URL del API\";\n            } else if (error.code === \"ETIMEDOUT\") {\n                specificError = \"Error de timeout: La solicitud tard\\xf3 demasiado tiempo\";\n            }\n            // Enhanced error object\n            const enhancedError = new Error(specificError);\n            enhancedError.originalError = error;\n            enhancedError.statusCode = error.response?.status;\n            enhancedError.apiUrl = this.buildURL(\"/rooms\", params);\n            throw enhancedError;\n        }\n    }\n    /**\n   * Get booking information\n   */ async getBookings(params) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.buildURL(\"/bookings\", params), {\n                timeout: 10000\n            });\n            return response.data || [];\n        } catch (error) {\n            console.error(\"LobbyPMS getBookings error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Create a new booking\n   */ async createBooking(booking) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(this.buildURL(\"/bookings\"), booking, {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                timeout: 15000\n            });\n            return response.data;\n        } catch (error) {\n            console.error(\"LobbyPMS createBooking error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get rates information\n   */ async getRates(params) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.buildURL(\"/rates\", params), {\n                timeout: 10000\n            });\n            return response.data || [];\n        } catch (error) {\n            console.error(\"LobbyPMS getRates error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get products/services\n   */ async getProducts() {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.buildURL(\"/products\"), {\n                timeout: 10000\n            });\n            return response.data || [];\n        } catch (error) {\n            console.error(\"LobbyPMS getProducts error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get clients information\n   */ async getClients(params) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.buildURL(\"/clients\", params), {\n                timeout: 10000\n            });\n            return response.data || [];\n        } catch (error) {\n            console.error(\"LobbyPMS getClients error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get room availability, rates and restrictions for specific dates\n   * According to LobbyPMS API documentation: GET /api/v1/available-rooms\n   */ async getAvailableRooms(params) {\n        try {\n            // Convert ISO dates to YYYY-mm-dd format (required by API)\n            const startDate = params.start_date.includes(\"T\") ? params.start_date.split(\"T\")[0] : params.start_date;\n            const endDate = params.end_date.includes(\"T\") ? params.end_date.split(\"T\")[0] : params.end_date;\n            // Build parameters according to API documentation\n            const apiParams = {\n                start_date: startDate,\n                end_date: endDate\n            };\n            // Only add category_id if provided\n            if (params.category_id) {\n                apiParams.category_id = params.category_id;\n            }\n            const finalUrl = this.buildURL(\"/available-rooms\", apiParams);\n            console.log(\"\\uD83D\\uDD0D ===== LOBBY PMS AVAILABLE ROOMS API =====\");\n            console.log(\"\\uD83D\\uDD0D Endpoint: /available-rooms (CORRECT per documentation)\");\n            console.log(\"\\uD83D\\uDD0D Start date:\", startDate);\n            console.log(\"\\uD83D\\uDD0D End date:\", endDate);\n            console.log(\"\\uD83D\\uDD0D Category ID:\", params.category_id || \"All categories\");\n            console.log(\"\\uD83D\\uDD0D Final URL:\", finalUrl);\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(finalUrl, {\n                timeout: 15000,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    \"User-Agent\": \"SurfCampSantaTeresa/1.0\"\n                }\n            });\n            const responseData = response.data;\n            console.log(\"\\uD83D\\uDCE5 ===== API RESPONSE ANALYSIS =====\");\n            console.log(\"\\uD83D\\uDCE5 Status:\", response.status);\n            console.log(\"\\uD83D\\uDCE5 Content-Type:\", response.headers[\"content-type\"]);\n            console.log(\"\\uD83D\\uDCE5 Response Type:\", typeof responseData);\n            console.log(\"\\uD83D\\uDCE5 Has data property:\", !!(responseData && \"data\" in responseData));\n            console.log(\"\\uD83D\\uDCE5 Data length:\", responseData?.data?.length || 0);\n            // Validate response structure\n            if (!responseData || typeof responseData !== \"object\") {\n                throw new Error(\"Invalid response format from LobbyPMS API\");\n            }\n            // Check if response is HTML (error page)\n            if (typeof responseData === \"string\" && (responseData.includes(\"<!doctype html>\") || responseData.includes(\"<html\") || responseData.includes(\"<!DOCTYPE\"))) {\n                // Extract title from HTML for more specific error\n                const titleMatch = responseData.match(/<title>(.*?)<\\/title>/i);\n                const title = titleMatch ? titleMatch[1] : \"Unknown HTML page\";\n                console.error(\"\\uD83D\\uDEA8 LobbyPMS returned HTML page instead of JSON:\");\n                console.error(\"\\uD83D\\uDEA8 Page title:\", title);\n                console.error(\"\\uD83D\\uDEA8 HTML preview:\", responseData.substring(0, 300));\n                throw new Error(`LobbyPMS API returned HTML page \"${title}\" instead of JSON - possible IP authorization or API token issue`);\n            }\n            console.log(\"✅ Valid JSON response received from LobbyPMS\");\n            // Log response structure for debugging\n            const dataArray = responseData.data || [];\n            console.log(\"\\uD83D\\uDCCA Response summary:\");\n            console.log(\"   \\uD83D\\uDCC5 Days returned:\", dataArray.length);\n            if (dataArray.length > 0) {\n                console.log(\"   \\uD83D\\uDCC5 First day:\", dataArray[0].date);\n                console.log(\"   \\uD83C\\uDFE0 Categories in first day:\", dataArray[0].categories?.length || 0);\n                if (dataArray[0].categories && dataArray[0].categories.length > 0) {\n                    const firstCategory = dataArray[0].categories[0];\n                    console.log(\"   \\uD83C\\uDFE0 First category example:\", {\n                        id: firstCategory.category_id,\n                        name: firstCategory.name,\n                        available_rooms: firstCategory.available_rooms,\n                        prices: firstCategory.prices\n                    });\n                }\n            }\n            return dataArray;\n        } catch (error) {\n            const responseData = error.response?.data;\n            const isHtmlResponse = typeof responseData === \"string\" && (responseData.includes(\"<!doctype html>\") || responseData.includes(\"<html\") || responseData.includes(\"<!DOCTYPE\"));\n            console.error(\"❌ LOBBY PMS AVAILABLE ROOMS ERROR:\", {\n                message: error.message,\n                status: error.response?.status,\n                statusText: error.response?.statusText,\n                responseType: typeof responseData,\n                isHtmlResponse: isHtmlResponse,\n                responsePreview: typeof responseData === \"string\" ? responseData.substring(0, 300) : responseData,\n                requestUrl: this.buildURL(\"/available-rooms\", {\n                    start_date: params.start_date.includes(\"T\") ? params.start_date.split(\"T\")[0] : params.start_date,\n                    end_date: params.end_date.includes(\"T\") ? params.end_date.split(\"T\")[0] : params.end_date,\n                    ...params.category_id && {\n                        category_id: params.category_id\n                    }\n                }),\n                apiToken: this.apiToken.slice(-8)\n            });\n            // Enhanced error message based on response type\n            let errorMessage = `LobbyPMS available rooms API failed: ${error.message}`;\n            if (isHtmlResponse) {\n                const titleMatch = responseData.match(/<title>(.*?)<\\/title>/i);\n                const title = titleMatch ? titleMatch[1] : \"Unknown page\";\n                errorMessage = `LobbyPMS API returned HTML page \"${title}\" instead of JSON - check IP authorization and API token`;\n            }\n            throw new Error(errorMessage);\n        }\n    }\n    /**\n   * Check if API is configured and working\n   */ isConfigured() {\n        // Check if we have a valid API token that's not a placeholder\n        const hasValidToken = !!(this.apiToken && this.apiToken !== \"your_api_token_here\" && this.apiToken.length > 20 && !this.apiToken.includes(\"placeholder\"));\n        // Check if we have a valid base URL\n        const hasValidURL = !!(this.baseURL && this.baseURL !== \"https://your-api-url.com\" && !this.baseURL.includes(\"placeholder\") && this.baseURL.includes(\"lobbypms.com\"));\n        console.log(\"\\uD83D\\uDD27 LobbyPMS Configuration Check:\", {\n            hasValidToken,\n            hasValidURL,\n            tokenLength: this.apiToken?.length || 0,\n            baseURL: this.baseURL,\n            isConfigured: hasValidToken && hasValidURL\n        });\n        return hasValidToken && hasValidURL;\n    }\n    /**\n   * Test API connectivity\n   */ async testConnection() {\n        try {\n            // Use the correct endpoint for testing\n            await this.getAvailableRooms({\n                start_date: \"2025-01-01\",\n                end_date: \"2025-01-02\"\n            });\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n}\n// Export a default instance\nconst lobbyPMSClient = new LobbyPMSClient();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/lobbypms.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/axios","vendor-chunks/asynckit","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/call-bind-apply-helpers","vendor-chunks/debug","vendor-chunks/get-proto","vendor-chunks/mime-db","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/mime-types","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/has-flag","vendor-chunks/get-intrinsic","vendor-chunks/es-set-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/delayed-stream","vendor-chunks/combined-stream"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Favailability%2Froute&page=%2Fapi%2Favailability%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Favailability%2Froute.ts&appDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();