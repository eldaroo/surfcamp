"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/reserve/route";
exports.ids = ["app/api/reserve/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Freserve%2Froute&page=%2Fapi%2Freserve%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Freserve%2Froute.ts&appDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Freserve%2Froute&page=%2Fapi%2Freserve%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Freserve%2Froute.ts&appDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var C_Users_loko_OneDrive_Desktop_Escritorio_surfcamp_app_api_reserve_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/reserve/route.ts */ \"(rsc)/./app/api/reserve/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/reserve/route\",\n        pathname: \"/api/reserve\",\n        filename: \"route\",\n        bundlePath: \"app/api/reserve/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\loko_\\\\OneDrive\\\\Desktop\\\\Escritorio\\\\surfcamp\\\\app\\\\api\\\\reserve\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_loko_OneDrive_Desktop_Escritorio_surfcamp_app_api_reserve_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/reserve/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZyZXNlcnZlJTJGcm91dGUmcGFnZT0lMkZhcGklMkZyZXNlcnZlJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGcmVzZXJ2ZSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNsb2tvXyU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q0VzY3JpdG9yaW8lNUNzdXJmY2FtcCU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDbG9rb18lNUNPbmVEcml2ZSU1Q0Rlc2t0b3AlNUNFc2NyaXRvcmlvJTVDc3VyZmNhbXAmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ29EO0FBQ25IO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ2lKOztBQUVqSiIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cmZjYW1wLWJvb2tpbmctc3lzdGVtLz85OGFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGxva29fXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcRXNjcml0b3Jpb1xcXFxzdXJmY2FtcFxcXFxhcHBcXFxcYXBpXFxcXHJlc2VydmVcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3Jlc2VydmUvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9yZXNlcnZlXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9yZXNlcnZlL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcbG9rb19cXFxcT25lRHJpdmVcXFxcRGVza3RvcFxcXFxFc2NyaXRvcmlvXFxcXHN1cmZjYW1wXFxcXGFwcFxcXFxhcGlcXFxccmVzZXJ2ZVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9yZXNlcnZlL3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Freserve%2Froute&page=%2Fapi%2Freserve%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Freserve%2Froute.ts&appDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/reserve/route.ts":
/*!**********************************!*\
  !*** ./app/api/reserve/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/utils */ \"(rsc)/./lib/utils.ts\");\n/* harmony import */ var _lib_lobbypms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/lobbypms */ \"(rsc)/./lib/lobbypms.ts\");\n/* harmony import */ var _lib_whatsapp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/whatsapp */ \"(rsc)/./lib/whatsapp.ts\");\n\n\n\n\n// Mapeo de roomTypeId a category_id de LobbyPMS\nconst ROOM_TYPE_MAPPING = {\n    \"casa-playa\": 4234,\n    \"casitas-privadas\": 15507,\n    \"casas-deluxe\": 5348 // Studio 1 (representativa de casas deluxe)\n};\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { checkIn, checkOut, guests, contactInfo, roomTypeId = \"casa-playa\", activities = [], paymentIntentId } = body;\n        const bookingReference = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.generateBookingReference)();\n        console.log(\"\\uD83C\\uDFE8 ===== PROCESSING RESERVATION =====\");\n        console.log(\"\\uD83C\\uDFE8 Booking data:\", {\n            checkIn,\n            checkOut,\n            guests,\n            roomTypeId,\n            contactInfo: contactInfo ? `${contactInfo.firstName} ${contactInfo.lastName}` : \"Missing\",\n            paymentIntentId,\n            bookingReference\n        });\n        // Get the corresponding category_id for LobbyPMS\n        const categoryId = ROOM_TYPE_MAPPING[roomTypeId];\n        if (!categoryId) {\n            console.error(\"❌ Invalid room type:\", roomTypeId);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: `Tipo de habitación no válido: ${roomTypeId}`\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"\\uD83D\\uDD04 Mapping room type:\", {\n            roomTypeId,\n            categoryId,\n            mappingUsed: ROOM_TYPE_MAPPING\n        });\n        // Convert dates to the format expected by LobbyPMS (Y-m-d)\n        const formatDateForLobbyPMS = (dateString)=>{\n            const date = new Date(dateString);\n            return date.toISOString().split(\"T\")[0]; // Gets YYYY-MM-DD format\n        };\n        const formattedCheckIn = formatDateForLobbyPMS(checkIn);\n        const formattedCheckOut = formatDateForLobbyPMS(checkOut);\n        console.log(\"\\uD83D\\uDCC5 Date formatting:\", {\n            original: {\n                checkIn,\n                checkOut\n            },\n            formatted: {\n                checkIn: formattedCheckIn,\n                checkOut: formattedCheckOut\n            }\n        });\n        // Prepare LobbyPMS reservation request with correct field names and date format\n        const bookingData = {\n            start_date: formattedCheckIn,\n            end_date: formattedCheckOut,\n            guest_count: guests,\n            total_adults: guests,\n            total_children: 0,\n            guest_name: `${contactInfo.firstName} ${contactInfo.lastName}`,\n            holder_name: `${contactInfo.firstName} ${contactInfo.lastName}`,\n            guest_email: contactInfo.email,\n            guest_phone: contactInfo.phone,\n            guest_document: contactInfo.dni,\n            customer_document: contactInfo.dni,\n            customer_nationality: \"ES\",\n            category_id: categoryId,\n            room_type_id: roomTypeId,\n            booking_reference: bookingReference,\n            source: \"Surfcamp Santa Teresa\",\n            payment_intent_id: paymentIntentId,\n            status: \"confirmed\",\n            notes: `🏄‍♂️ RESERVA DESDE SURFCAMP SANTA TERESA 🏄‍♂️\\n\\nDetalles de la reserva:\\n- Web: surfcamp-santa-teresa.com\\n- Referencia: ${bookingReference}\\n- Huésped: ${contactInfo.firstName} ${contactInfo.lastName}\\n- DNI: ${contactInfo.dni}\\n- Email: ${contactInfo.email}\\n- Teléfono: ${contactInfo.phone}\\n- Pago: ${paymentIntentId}`,\n            special_requests: `Reserva realizada a través de la página web oficial de Surfcamp Santa Teresa. Referencia de pago: ${paymentIntentId}`\n        };\n        console.log(\"\\uD83D\\uDCE1 Sending to LobbyPMS:\", bookingData);\n        try {\n            console.log(\"\\uD83D\\uDE80 Attempting to create booking in LobbyPMS...\");\n            const reservationData = await _lib_lobbypms__WEBPACK_IMPORTED_MODULE_2__.lobbyPMSClient.createBooking(bookingData);\n            console.log(\"✅ LobbyPMS reservation successful:\", reservationData);\n            // Enviar mensaje de confirmación por WhatsApp\n            try {\n                const waMessage = `¡Hola! Se confirmó una reserva en SurfCamp para las fechas ${checkIn} a ${checkOut} para ${guests} huésped(es). Referencia: ${bookingReference}`;\n                const whatsappResult = await (0,_lib_whatsapp__WEBPACK_IMPORTED_MODULE_3__.sendWhatsAppMessage)(\"+5491162802566\", waMessage);\n                console.log(\"\\uD83D\\uDCF1 WhatsApp confirmation sent:\", whatsappResult);\n            } catch (whatsappError) {\n                console.error(\"❌ WhatsApp error (non-blocking):\", whatsappError);\n            }\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: true,\n                reservationId: reservationData.reservation_id || reservationData.id,\n                bookingReference,\n                status: reservationData.status || \"confirmed\",\n                message: \"Reserva confirmada exitosamente en LobbyPMS\",\n                demoMode: false,\n                lobbyPMSResponse: reservationData\n            });\n        } catch (lobbyError) {\n            console.error(\"❌ LobbyPMS booking error:\", {\n                message: lobbyError.message,\n                status: lobbyError.response?.status,\n                data: lobbyError.response?.data,\n                bookingData\n            });\n            // Si es error de capacidad, ajustar y reintentar\n            if (lobbyError.response?.data?.error_code === \"MAXIMUM_CAPACITY\") {\n                console.log(\"\\uD83D\\uDD04 Capacity error detected, adjusting guest count...\");\n                // Reducir huéspedes a 1 e intentar de nuevo\n                const adjustedBookingData = {\n                    ...bookingData,\n                    guest_count: 1,\n                    total_adults: 1\n                };\n                try {\n                    console.log(\"\\uD83D\\uDD04 Retrying with 1 guest...\");\n                    const retryReservationData = await _lib_lobbypms__WEBPACK_IMPORTED_MODULE_2__.lobbyPMSClient.createBooking(adjustedBookingData);\n                    console.log(\"✅ LobbyPMS reservation successful (adjusted):\", retryReservationData);\n                    // Enviar mensaje de confirmación por WhatsApp\n                    try {\n                        const waMessage = `¡Hola! Se confirmó una reserva en SurfCamp para las fechas ${checkIn} a ${checkOut} para 1 huésped (ajustado por capacidad). Referencia: ${bookingReference}`;\n                        const whatsappResult = await (0,_lib_whatsapp__WEBPACK_IMPORTED_MODULE_3__.sendWhatsAppMessage)(\"+5491162802566\", waMessage);\n                        console.log(\"\\uD83D\\uDCF1 WhatsApp confirmation sent (adjusted):\", whatsappResult);\n                    } catch (whatsappError) {\n                        console.error(\"❌ WhatsApp error (non-blocking):\", whatsappError);\n                    }\n                    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                        success: true,\n                        reservationId: retryReservationData.reservation_id || retryReservationData.id,\n                        bookingReference,\n                        status: retryReservationData.status || \"confirmed\",\n                        message: \"Reserva confirmada exitosamente en LobbyPMS (ajustada a 1 hu\\xe9sped por capacidad)\",\n                        demoMode: false,\n                        adjusted: true,\n                        originalGuests: guests,\n                        finalGuests: 1,\n                        lobbyPMSResponse: retryReservationData\n                    });\n                } catch (retryError) {\n                    console.error(\"❌ Retry also failed:\", retryError);\n                // Continue to fallback below\n                }\n            }\n            // Solo como ÚLTIMO RECURSO: modo demo con notificación especial\n            console.log(\"\\uD83D\\uDD04 LobbyPMS failed, using emergency fallback mode\");\n            // Enviar mensaje de alerta por WhatsApp \n            try {\n                const alertMessage = `🚨 ALERTA: Fallo en LobbyPMS - Reserva ${bookingReference} requiere procesamiento manual.\\n\\nDatos:\\n- Fechas: ${checkIn} a ${checkOut}\\n- Huéspedes: ${guests}\\n- Cliente: ${contactInfo.firstName} ${contactInfo.lastName}\\n- Email: ${contactInfo.email}\\n- Teléfono: ${contactInfo.phone}\\n- Error: ${lobbyError.message}`;\n                const alertResult = await (0,_lib_whatsapp__WEBPACK_IMPORTED_MODULE_3__.sendWhatsAppMessage)(\"+5491162802566\", alertMessage);\n                console.log(\"\\uD83D\\uDCF1 WhatsApp alert sent:\", alertResult);\n            } catch (whatsappError) {\n                console.error(\"❌ WhatsApp alert error:\", whatsappError);\n            }\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: true,\n                reservationId: `EMERGENCY-${bookingReference}`,\n                bookingReference,\n                status: \"pending_manual_processing\",\n                message: \"Reserva recibida - proces\\xe1ndose manualmente\",\n                demoMode: true,\n                needsManualProcessing: true,\n                fallbackReason: lobbyError.message,\n                originalError: lobbyError.response?.data,\n                note: \"Tu reserva est\\xe1 confirmada. Nos contactaremos contigo en las pr\\xf3ximas horas para finalizar los detalles.\"\n            });\n        }\n    } catch (error) {\n        console.error(\"❌ General reservation error:\", error);\n        // Generate a fallback booking reference if we don't have one\n        const fallbackReference = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.generateBookingReference)();\n        // Enviar alerta crítica por WhatsApp\n        try {\n            const criticalAlert = `🚨 ERROR CRÍTICO: Fallo general en sistema de reservas.\\n\\nReferencia: ${fallbackReference}\\nError: ${error.message}`;\n            await (0,_lib_whatsapp__WEBPACK_IMPORTED_MODULE_3__.sendWhatsAppMessage)(\"+5491162802566\", criticalAlert);\n        } catch (whatsappError) {\n            console.error(\"❌ Critical WhatsApp alert failed:\", whatsappError);\n        }\n        // Incluso en error general, confirmar al usuario\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            reservationId: `CRITICAL-FALLBACK-${fallbackReference}`,\n            bookingReference: fallbackReference,\n            status: \"pending_manual_processing\",\n            message: \"Reserva recibida - proces\\xe1ndose manualmente\",\n            demoMode: true,\n            needsManualProcessing: true,\n            error: error.message,\n            note: \"Tu reserva ha sido registrada. Nos pondremos en contacto contigo para confirmar los detalles.\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/reserve/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/lobbypms.ts":
/*!*************************!*\
  !*** ./lib/lobbypms.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LobbyPMSClient: () => (/* binding */ LobbyPMSClient),\n/* harmony export */   lobbyPMSClient: () => (/* binding */ lobbyPMSClient)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n\n// LobbyPMS API Configuration - REAL CREDENTIALS\nconst LOBBYPMS_BASE_URL = process.env.LOBBYPMS_API_URL || \"https://api.lobbypms.com/api/v1\";\nconst LOBBYPMS_API_TOKEN = process.env.LOBBYPMS_API_KEY || \"JNjeoLeXxTHFQSwUPQCgwBnCZktRVv7pfQ48uz2tyoNu6K9dW6D2US1cN9Mu\";\nclass LobbyPMSClient {\n    constructor(baseURL = LOBBYPMS_BASE_URL, apiToken = LOBBYPMS_API_TOKEN){\n        this.baseURL = baseURL;\n        this.apiToken = apiToken;\n    }\n    buildURL(endpoint, additionalParams) {\n        // Remove leading slash from endpoint if present to avoid replacing the entire path\n        const cleanEndpoint = endpoint.startsWith(\"/\") ? endpoint.slice(1) : endpoint;\n        // Ensure baseURL ends with slash for proper concatenation\n        const baseUrl = this.baseURL.endsWith(\"/\") ? this.baseURL : this.baseURL + \"/\";\n        const url = new URL(cleanEndpoint, baseUrl);\n        url.searchParams.set(\"api_token\", this.apiToken);\n        if (additionalParams) {\n            Object.entries(additionalParams).forEach(([key, value])=>{\n                url.searchParams.set(key, value);\n            });\n        }\n        console.log(\"\\uD83D\\uDD27 URL BUILD DEBUG:\", {\n            originalEndpoint: endpoint,\n            cleanEndpoint: cleanEndpoint,\n            baseUrl: baseUrl,\n            finalUrl: url.toString()\n        });\n        return url.toString();\n    }\n    /**\n   * Get available rooms\n   */ async getRooms(params) {\n        try {\n            const finalUrl = this.buildURL(\"/rooms\", params);\n            console.log(\"\\uD83D\\uDD0D ===== URL CONSTRUCTION ANALYSIS =====\");\n            console.log(\"\\uD83D\\uDD0D Base URL:\", this.baseURL);\n            console.log(\"\\uD83D\\uDD0D API Token:\", this.apiToken);\n            console.log(\"\\uD83D\\uDD0D Endpoint:\", \"/rooms\");\n            console.log(\"\\uD83D\\uDD0D Params:\", params);\n            console.log(\"\\uD83D\\uDD0D Final constructed URL:\", finalUrl);\n            console.log(\"\\uD83D\\uDD0D ===== COMPARISON =====\");\n            console.log(\"\\uD83D\\uDD0D Working Postman URL: https://api.lobbypms.com/api/v1/rooms?api_token=JNjeoLeXxTHFQSwUPQCgwBnCZktRVv7pfQ48uz2tyoNu6K9dW6D2US1cN9Mu\");\n            console.log(\"\\uD83D\\uDD0D App constructed URL:\", finalUrl);\n            console.log(\"\\uD83D\\uDD0D URLs match:\", finalUrl === \"https://api.lobbypms.com/api/v1/rooms?api_token=JNjeoLeXxTHFQSwUPQCgwBnCZktRVv7pfQ48uz2tyoNu6K9dW6D2US1cN9Mu\");\n            // First try with params, then without if no results\n            let response;\n            let responseData;\n            try {\n                console.log(\"\\uD83D\\uDE80 Making request to:\", finalUrl);\n                response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(finalUrl, {\n                    timeout: 10000,\n                    headers: {\n                        \"Accept\": \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                        \"User-Agent\": \"SurfCampSantaTeresa/1.0\"\n                    }\n                });\n                responseData = response.data;\n                console.log(\"\\uD83D\\uDCE5 Response received - Status:\", response.status);\n                console.log(\"\\uD83D\\uDCE5 Response Content-Type:\", response.headers[\"content-type\"]);\n                console.log(\"\\uD83D\\uDCE5 Response Data Type:\", typeof responseData);\n                console.log(\"\\uD83D\\uDCE5 Response Size:\", JSON.stringify(responseData).length, \"characters\");\n                // Check if response is HTML\n                if (typeof responseData === \"string\" && responseData.includes(\"<!doctype html>\")) {\n                    console.log(\"\\uD83D\\uDEA8 ===== CRITICAL ERROR: HTML RESPONSE =====\");\n                    console.log(\"\\uD83D\\uDEA8 Expected: JSON data\");\n                    console.log(\"\\uD83D\\uDEA8 Received: HTML page\");\n                    console.log(\"\\uD83D\\uDEA8 This means the API endpoint is not working correctly\");\n                    console.log(\"\\uD83D\\uDEA8 Possible causes:\");\n                    console.log(\"   1. Wrong API endpoint URL\");\n                    console.log(\"   2. Invalid API token\");\n                    console.log(\"   3. API server routing issue\");\n                    console.log(\"   4. Authentication/authorization problem\");\n                    console.log(\"\\uD83D\\uDEA8 HTML content (first 300 chars):\", responseData.substring(0, 300));\n                    // Extract title from HTML for debugging\n                    const titleMatch = responseData.match(/<title>(.*?)<\\/title>/);\n                    if (titleMatch) {\n                        console.log(\"\\uD83D\\uDEA8 HTML Page Title:\", titleMatch[1]);\n                    }\n                    throw new Error(\"LobbyPMS API returned HTML instead of JSON. This indicates an API endpoint or authentication issue.\");\n                }\n                console.log(\"✅ Valid JSON response received\");\n            } catch (requestError) {\n                console.error(\"❌ Request failed:\", {\n                    message: requestError.message,\n                    status: requestError.response?.status,\n                    statusText: requestError.response?.statusText,\n                    url: finalUrl,\n                    responseType: typeof requestError.response?.data,\n                    responseLength: requestError.response?.data?.length || 0\n                });\n                // If we had parameters, try without them as fallback\n                if (params && Object.keys(params).length > 0) {\n                    console.log(\"\\uD83D\\uDD04 Trying without parameters as fallback...\");\n                    const fallbackUrl = this.buildURL(\"/rooms\");\n                    console.log(\"\\uD83D\\uDD04 Fallback URL:\", fallbackUrl);\n                    response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(fallbackUrl, {\n                        timeout: 10000,\n                        headers: {\n                            \"Accept\": \"application/json\",\n                            \"Content-Type\": \"application/json\",\n                            \"User-Agent\": \"SurfCampSantaTeresa/1.0\"\n                        }\n                    });\n                    responseData = response.data;\n                    console.log(\"\\uD83D\\uDCE5 Fallback response - Status:\", response.status);\n                    console.log(\"\\uD83D\\uDCE5 Fallback response - Content-Type:\", response.headers[\"content-type\"]);\n                    console.log(\"\\uD83D\\uDCE5 Fallback response - Data Type:\", typeof responseData);\n                    if (typeof responseData === \"string\" && responseData.includes(\"<!doctype html>\")) {\n                        console.log(\"\\uD83D\\uDEA8 Fallback also returned HTML - API endpoint is definitely broken\");\n                        throw new Error(\"LobbyPMS API consistently returns HTML instead of JSON. API endpoint is not working.\");\n                    }\n                } else {\n                    throw requestError;\n                }\n            }\n            console.log(\"\\uD83D\\uDCE5 LobbyPMS ROOMS API SUMMARY:\");\n            console.log(\"   Status Code:\", response.status);\n            console.log(\"   Content-Type:\", response.headers[\"content-type\"]);\n            console.log(\"   Response Type:\", typeof responseData);\n            console.log(\"   Response Size:\", JSON.stringify(responseData).length, \"characters\");\n            console.log(\"   Has .data property:\", !!(responseData && \"data\" in responseData));\n            console.log(\"   Categories count:\", responseData?.data?.length || 0);\n            console.log(\"   \\uD83D\\uDD0D REQUEST URL:\", this.buildURL(\"/rooms\", params));\n            console.log(\"   \\uD83D\\uDD0D REQUEST PARAMS:\", params);\n            console.log(\"   \\uD83D\\uDD0D API TOKEN (last 8 chars):\", this.apiToken.slice(-8));\n            // Check if we got HTML instead of JSON\n            if (typeof responseData === \"string\" && responseData.includes(\"<!doctype html>\")) {\n                console.log(\"❌ CRITICAL: API returned HTML page instead of JSON data\");\n                console.log(\"❌ This usually means:\");\n                console.log(\"   1. Wrong API endpoint URL\");\n                console.log(\"   2. Invalid API token\");\n                console.log(\"   3. API server is down\");\n                console.log(\"   4. Rate limiting or IP blocking\");\n                console.log(\"❌ HTML Title:\", responseData.match(/<title>(.*?)<\\/title>/)?.[1] || \"No title found\");\n            }\n            // Handle the actual API structure: {data: [categories]}\n            const categories = responseData?.data || [];\n            console.log(\"\\uD83D\\uDCCA Extracted categories:\", categories.length);\n            if (categories.length > 0) {\n                console.log(\"\\uD83D\\uDCCA First category structure:\", JSON.stringify(categories[0], null, 2));\n            }\n            const rooms = [];\n            // Extract rooms from each category\n            categories.forEach((category, index)=>{\n                console.log(`🏠 Processing category ${index + 1}:`, {\n                    id: category.category_id,\n                    name: category.name,\n                    capacity: category.capacity,\n                    quantity: category.quantity,\n                    roomsCount: category.rooms?.length || 0\n                });\n                if (category.rooms && Array.isArray(category.rooms)) {\n                    // Add the category as a room type - NO FALLBACK PRICES\n                    const room = {\n                        id: category.category_id?.toString() || \"\",\n                        name: category.name || \"Unknown Room\",\n                        room_type_id: category.category_id?.toString() || \"\",\n                        room_type_name: category.name || \"Unknown Room\",\n                        available_rooms: category.quantity || 1,\n                        capacity: category.capacity || 2,\n                        price_per_night: undefined,\n                        rate: undefined // NO fallback - use real data only\n                    };\n                    console.log(`✅ Added room:`, room);\n                    rooms.push(room);\n                } else {\n                    console.log(`❌ Category ${category.name} has no valid rooms array`);\n                }\n            });\n            console.log(\"\\uD83C\\uDFAF Final rooms array:\", rooms.length, \"rooms\");\n            return rooms;\n        } catch (error) {\n            console.error(\"❌ LobbyPMS getRooms DETAILED ERROR:\", {\n                message: error.message,\n                status: error.response?.status,\n                statusText: error.response?.statusText,\n                headers: error.response?.headers,\n                data: typeof error.response?.data === \"string\" ? error.response.data.substring(0, 200) : error.response?.data,\n                stack: error.stack,\n                url: this.buildURL(\"/rooms\", params),\n                config: {\n                    baseURL: this.baseURL,\n                    tokenLastChars: this.apiToken.slice(-8),\n                    paramsUsed: params\n                }\n            });\n            // Create specific error message based on the error type\n            let specificError = `LobbyPMS API Error: ${error.message}`;\n            if (error.response?.status === 401) {\n                specificError = \"Error de autenticaci\\xf3n: Token API inv\\xe1lido o expirado\";\n            } else if (error.response?.status === 403) {\n                specificError = \"Error de permisos: No tienes acceso a este recurso\";\n            } else if (error.response?.status === 404) {\n                specificError = \"Error de endpoint: La URL del API no es correcta\";\n            } else if (error.response?.status === 429) {\n                specificError = \"Error de l\\xedmite: Demasiadas solicitudes, intenta m\\xe1s tarde\";\n            } else if (error.response?.status >= 500) {\n                specificError = \"Error del servidor: El servidor de LobbyPMS est\\xe1 experimentando problemas\";\n            } else if (error.code === \"ECONNREFUSED\") {\n                specificError = \"Error de conexi\\xf3n: No se puede conectar al servidor de LobbyPMS\";\n            } else if (error.code === \"ENOTFOUND\") {\n                specificError = \"Error de DNS: No se puede resolver la URL del API\";\n            } else if (error.code === \"ETIMEDOUT\") {\n                specificError = \"Error de timeout: La solicitud tard\\xf3 demasiado tiempo\";\n            }\n            // Enhanced error object\n            const enhancedError = new Error(specificError);\n            enhancedError.originalError = error;\n            enhancedError.statusCode = error.response?.status;\n            enhancedError.apiUrl = this.buildURL(\"/rooms\", params);\n            throw enhancedError;\n        }\n    }\n    /**\n   * Get booking information\n   */ async getBookings(params) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.buildURL(\"/bookings\", params), {\n                timeout: 10000\n            });\n            return response.data || [];\n        } catch (error) {\n            console.error(\"LobbyPMS getBookings error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Create a new booking\n   */ async createBooking(booking) {\n        try {\n            console.log(\"\\uD83D\\uDE80 ===== LOBBY PMS CREATE BOOKING =====\");\n            console.log(\"\\uD83D\\uDE80 Endpoint: /bookings\");\n            console.log(\"\\uD83D\\uDE80 Booking data:\", JSON.stringify(booking, null, 2));\n            const finalUrl = this.buildURL(\"/bookings\");\n            console.log(\"\\uD83D\\uDE80 Final URL:\", finalUrl);\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(finalUrl, booking, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"User-Agent\": \"SurfCampSantaTeresa/1.0\"\n                },\n                timeout: 15000\n            });\n            console.log(\"✅ LobbyPMS createBooking successful:\");\n            console.log(\"   Status:\", response.status);\n            console.log(\"   Response:\", JSON.stringify(response.data, null, 2));\n            return response.data;\n        } catch (error) {\n            console.error(\"❌ LobbyPMS createBooking error:\", {\n                message: error.message,\n                status: error.response?.status,\n                statusText: error.response?.statusText,\n                responseType: typeof error.response?.data,\n                responseData: error.response?.data,\n                requestData: booking,\n                url: this.buildURL(\"/bookings\")\n            });\n            // Check if response is HTML (error page)\n            const responseData = error.response?.data;\n            if (typeof responseData === \"string\" && (responseData.includes(\"<!doctype html>\") || responseData.includes(\"<html\") || responseData.includes(\"<!DOCTYPE\"))) {\n                const titleMatch = responseData.match(/<title>(.*?)<\\/title>/i);\n                const title = titleMatch ? titleMatch[1] : \"Unknown HTML page\";\n                console.error(\"\\uD83D\\uDEA8 LobbyPMS createBooking returned HTML page instead of JSON:\");\n                console.error(\"\\uD83D\\uDEA8 Page title:\", title);\n                console.error(\"\\uD83D\\uDEA8 HTML preview:\", responseData.substring(0, 300));\n                throw new Error(`LobbyPMS createBooking API returned HTML page \"${title}\" instead of JSON - possible IP authorization or API token issue`);\n            }\n            throw error;\n        }\n    }\n    /**\n   * Get rates information\n   */ async getRates(params) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.buildURL(\"/rates\", params), {\n                timeout: 10000\n            });\n            return response.data || [];\n        } catch (error) {\n            console.error(\"LobbyPMS getRates error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get products/services\n   */ async getProducts() {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.buildURL(\"/products\"), {\n                timeout: 10000\n            });\n            return response.data || [];\n        } catch (error) {\n            console.error(\"LobbyPMS getProducts error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get clients information\n   */ async getClients(params) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.buildURL(\"/clients\", params), {\n                timeout: 10000\n            });\n            return response.data || [];\n        } catch (error) {\n            console.error(\"LobbyPMS getClients error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get room availability, rates and restrictions for specific dates\n   * According to LobbyPMS API documentation: GET /api/v1/available-rooms\n   */ async getAvailableRooms(params) {\n        try {\n            // Convert ISO dates to YYYY-mm-dd format (required by API)\n            const startDate = params.start_date.includes(\"T\") ? params.start_date.split(\"T\")[0] : params.start_date;\n            const endDate = params.end_date.includes(\"T\") ? params.end_date.split(\"T\")[0] : params.end_date;\n            // Build parameters according to API documentation\n            const apiParams = {\n                start_date: startDate,\n                end_date: endDate\n            };\n            // Only add category_id if provided\n            if (params.category_id) {\n                apiParams.category_id = params.category_id;\n            }\n            const finalUrl = this.buildURL(\"/available-rooms\", apiParams);\n            console.log(\"\\uD83D\\uDD0D ===== LOBBY PMS AVAILABLE ROOMS API =====\");\n            console.log(\"\\uD83D\\uDD0D Endpoint: /available-rooms (CORRECT per documentation)\");\n            console.log(\"\\uD83D\\uDD0D Start date:\", startDate);\n            console.log(\"\\uD83D\\uDD0D End date:\", endDate);\n            console.log(\"\\uD83D\\uDD0D Category ID:\", params.category_id || \"All categories\");\n            console.log(\"\\uD83D\\uDD0D Final URL:\", finalUrl);\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(finalUrl, {\n                timeout: 15000,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    \"User-Agent\": \"SurfCampSantaTeresa/1.0\"\n                }\n            });\n            const responseData = response.data;\n            console.log(\"\\uD83D\\uDCE5 ===== API RESPONSE ANALYSIS =====\");\n            console.log(\"\\uD83D\\uDCE5 Status:\", response.status);\n            console.log(\"\\uD83D\\uDCE5 Content-Type:\", response.headers[\"content-type\"]);\n            console.log(\"\\uD83D\\uDCE5 Response Type:\", typeof responseData);\n            console.log(\"\\uD83D\\uDCE5 Has data property:\", !!(responseData && \"data\" in responseData));\n            console.log(\"\\uD83D\\uDCE5 Data length:\", responseData?.data?.length || 0);\n            // Validate response structure\n            if (!responseData || typeof responseData !== \"object\") {\n                throw new Error(\"Invalid response format from LobbyPMS API\");\n            }\n            // Check if response is HTML (error page)\n            if (typeof responseData === \"string\" && (responseData.includes(\"<!doctype html>\") || responseData.includes(\"<html\") || responseData.includes(\"<!DOCTYPE\"))) {\n                // Extract title from HTML for more specific error\n                const titleMatch = responseData.match(/<title>(.*?)<\\/title>/i);\n                const title = titleMatch ? titleMatch[1] : \"Unknown HTML page\";\n                console.error(\"\\uD83D\\uDEA8 LobbyPMS returned HTML page instead of JSON:\");\n                console.error(\"\\uD83D\\uDEA8 Page title:\", title);\n                console.error(\"\\uD83D\\uDEA8 HTML preview:\", responseData.substring(0, 300));\n                throw new Error(`LobbyPMS API returned HTML page \"${title}\" instead of JSON - possible IP authorization or API token issue`);\n            }\n            console.log(\"✅ Valid JSON response received from LobbyPMS\");\n            // Log response structure for debugging\n            const dataArray = responseData.data || [];\n            console.log(\"\\uD83D\\uDCCA Response summary:\");\n            console.log(\"   \\uD83D\\uDCC5 Days returned:\", dataArray.length);\n            if (dataArray.length > 0) {\n                console.log(\"   \\uD83D\\uDCC5 First day:\", dataArray[0].date);\n                console.log(\"   \\uD83C\\uDFE0 Categories in first day:\", dataArray[0].categories?.length || 0);\n                if (dataArray[0].categories && dataArray[0].categories.length > 0) {\n                    const firstCategory = dataArray[0].categories[0];\n                    console.log(\"   \\uD83C\\uDFE0 First category example:\", {\n                        id: firstCategory.category_id,\n                        name: firstCategory.name,\n                        available_rooms: firstCategory.available_rooms,\n                        prices: firstCategory.prices\n                    });\n                }\n            }\n            return dataArray;\n        } catch (error) {\n            const responseData = error.response?.data;\n            const isHtmlResponse = typeof responseData === \"string\" && (responseData.includes(\"<!doctype html>\") || responseData.includes(\"<html\") || responseData.includes(\"<!DOCTYPE\"));\n            console.error(\"❌ LOBBY PMS AVAILABLE ROOMS ERROR:\", {\n                message: error.message,\n                status: error.response?.status,\n                statusText: error.response?.statusText,\n                responseType: typeof responseData,\n                isHtmlResponse: isHtmlResponse,\n                responsePreview: typeof responseData === \"string\" ? responseData.substring(0, 300) : responseData,\n                requestUrl: this.buildURL(\"/available-rooms\", {\n                    start_date: params.start_date.includes(\"T\") ? params.start_date.split(\"T\")[0] : params.start_date,\n                    end_date: params.end_date.includes(\"T\") ? params.end_date.split(\"T\")[0] : params.end_date,\n                    ...params.category_id && {\n                        category_id: params.category_id\n                    }\n                }),\n                apiToken: this.apiToken.slice(-8)\n            });\n            // Enhanced error message based on response type\n            let errorMessage = `LobbyPMS available rooms API failed: ${error.message}`;\n            if (isHtmlResponse) {\n                const titleMatch = responseData.match(/<title>(.*?)<\\/title>/i);\n                const title = titleMatch ? titleMatch[1] : \"Unknown page\";\n                errorMessage = `LobbyPMS API returned HTML page \"${title}\" instead of JSON - check IP authorization and API token`;\n            }\n            throw new Error(errorMessage);\n        }\n    }\n    /**\n   * Check if API is configured and working\n   */ isConfigured() {\n        // Check if we have a valid API token that's not a placeholder\n        const hasValidToken = !!(this.apiToken && this.apiToken !== \"your_api_token_here\" && this.apiToken.length > 20 && !this.apiToken.includes(\"placeholder\"));\n        // Check if we have a valid base URL\n        const hasValidURL = !!(this.baseURL && this.baseURL !== \"https://your-api-url.com\" && !this.baseURL.includes(\"placeholder\") && this.baseURL.includes(\"lobbypms.com\"));\n        console.log(\"\\uD83D\\uDD27 LobbyPMS Configuration Check:\", {\n            hasValidToken,\n            hasValidURL,\n            tokenLength: this.apiToken?.length || 0,\n            baseURL: this.baseURL,\n            isConfigured: hasValidToken && hasValidURL\n        });\n        return hasValidToken && hasValidURL;\n    }\n    /**\n   * Test API connectivity\n   */ async testConnection() {\n        try {\n            // Use the correct endpoint for testing\n            await this.getAvailableRooms({\n                start_date: \"2025-01-01\",\n                end_date: \"2025-01-02\"\n            });\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n}\n// Export a default instance\nconst lobbyPMSClient = new LobbyPMSClient();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/lobbypms.ts\n");

/***/ }),

/***/ "(rsc)/./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateNights: () => (/* binding */ calculateNights),\n/* harmony export */   cn: () => (/* binding */ cn),\n/* harmony export */   formatCurrency: () => (/* binding */ formatCurrency),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   generateBookingReference: () => (/* binding */ generateBookingReference),\n/* harmony export */   validateDateRange: () => (/* binding */ validateDateRange),\n/* harmony export */   validateGuestCount: () => (/* binding */ validateGuestCount)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(rsc)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(rsc)/./node_modules/tailwind-merge/dist/lib/tw-merge.mjs\");\n/* harmony import */ var date_fns_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! date-fns/format */ \"(rsc)/./node_modules/date-fns/esm/format/index.js\");\n/* harmony import */ var date_fns_differenceInDays__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! date-fns/differenceInDays */ \"(rsc)/./node_modules/date-fns/esm/differenceInDays/index.js\");\n/* harmony import */ var date_fns_isAfter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! date-fns/isAfter */ \"(rsc)/./node_modules/date-fns/esm/isAfter/index.js\");\n/* harmony import */ var date_fns_isBefore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! date-fns/isBefore */ \"(rsc)/./node_modules/date-fns/esm/isBefore/index.js\");\n/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! date-fns/locale */ \"(rsc)/./node_modules/date-fns/esm/locale/es/index.js\");\n\n\n\n\n\n\n\nfunction cn(...inputs) {\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\nfunction formatCurrency(amount, currency = \"USD\") {\n    return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: currency\n    }).format(amount);\n}\nfunction formatDate(date, pattern = \"dd/MM/yyyy\") {\n    return (0,date_fns_format__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(date, pattern, {\n        locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n    });\n}\nfunction calculateNights(checkIn, checkOut) {\n    return (0,date_fns_differenceInDays__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(checkOut, checkIn);\n}\nfunction validateDateRange(checkIn, checkOut) {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    if ((0,date_fns_isBefore__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(checkIn, today)) {\n        return \"La fecha de entrada no puede ser anterior a hoy\";\n    }\n    if (!(0,date_fns_isAfter__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(checkOut, checkIn)) {\n        return \"La fecha de salida debe ser posterior a la fecha de entrada\";\n    }\n    const nights = calculateNights(checkIn, checkOut);\n    if (nights > 30) {\n        return \"La estad\\xeda no puede ser mayor a 30 noches\";\n    }\n    if (nights < 1) {\n        return \"La estad\\xeda debe ser de al menos 1 noche\";\n    }\n    return null;\n}\nfunction validateGuestCount(guests) {\n    if (guests < 1) {\n        return \"Debe haber al menos 1 hu\\xe9sped\";\n    }\n    if (guests > 12) {\n        return \"El m\\xe1ximo es 12 hu\\xe9spedes por reserva\";\n    }\n    return null;\n}\nfunction generateBookingReference() {\n    const timestamp = Date.now().toString(36);\n    const random = Math.random().toString(36).substr(2, 5);\n    return `SC-${timestamp}${random}`.toUpperCase();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkM7QUFDSjtBQUM4QjtBQUFBO0FBQUE7QUFBQTtBQUNsQztBQUU5QixTQUFTTyxHQUFHLEdBQUdDLE1BQW9CO0lBQ3hDLE9BQU9QLHVEQUFPQSxDQUFDRCwwQ0FBSUEsQ0FBQ1E7QUFDdEI7QUFFTyxTQUFTQyxlQUFlQyxNQUFjLEVBQUVDLFdBQW1CLEtBQUs7SUFDckUsT0FBTyxJQUFJQyxLQUFLQyxZQUFZLENBQUMsU0FBUztRQUNwQ0MsT0FBTztRQUNQSCxVQUFVQTtJQUNaLEdBQUdULE1BQU0sQ0FBQ1E7QUFDWjtBQUVPLFNBQVNLLFdBQVdDLElBQVUsRUFBRUMsVUFBa0IsWUFBWTtJQUNuRSxPQUFPZiwyREFBTUEsQ0FBQ2MsTUFBTUMsU0FBUztRQUFFQyxRQUFRWix1REFBRUE7SUFBQztBQUM1QztBQUVPLFNBQVNhLGdCQUFnQkMsT0FBYSxFQUFFQyxRQUFjO0lBQzNELE9BQU9sQixxRUFBZ0JBLENBQUNrQixVQUFVRDtBQUNwQztBQUVPLFNBQVNFLGtCQUFrQkYsT0FBYSxFQUFFQyxRQUFjO0lBQzdELE1BQU1FLFFBQVEsSUFBSUM7SUFDbEJELE1BQU1FLFFBQVEsQ0FBQyxHQUFHLEdBQUcsR0FBRztJQUV4QixJQUFJcEIsNkRBQVFBLENBQUNlLFNBQVNHLFFBQVE7UUFDNUIsT0FBTztJQUNUO0lBRUEsSUFBSSxDQUFDbkIsNERBQU9BLENBQUNpQixVQUFVRCxVQUFVO1FBQy9CLE9BQU87SUFDVDtJQUVBLE1BQU1NLFNBQVNQLGdCQUFnQkMsU0FBU0M7SUFDeEMsSUFBSUssU0FBUyxJQUFJO1FBQ2YsT0FBTztJQUNUO0lBRUEsSUFBSUEsU0FBUyxHQUFHO1FBQ2QsT0FBTztJQUNUO0lBRUEsT0FBTztBQUNUO0FBRU8sU0FBU0MsbUJBQW1CQyxNQUFjO0lBQy9DLElBQUlBLFNBQVMsR0FBRztRQUNkLE9BQU87SUFDVDtJQUVBLElBQUlBLFNBQVMsSUFBSTtRQUNmLE9BQU87SUFDVDtJQUVBLE9BQU87QUFDVDtBQUVPLFNBQVNDO0lBQ2QsTUFBTUMsWUFBWU4sS0FBS08sR0FBRyxHQUFHQyxRQUFRLENBQUM7SUFDdEMsTUFBTUMsU0FBU0MsS0FBS0QsTUFBTSxHQUFHRCxRQUFRLENBQUMsSUFBSUcsTUFBTSxDQUFDLEdBQUc7SUFDcEQsT0FBTyxDQUFDLEdBQUcsRUFBRUwsVUFBVSxFQUFFRyxPQUFPLENBQUMsQ0FBQ0csV0FBVztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cmZjYW1wLWJvb2tpbmctc3lzdGVtLy4vbGliL3V0aWxzLnRzP2Y3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHlwZSBDbGFzc1ZhbHVlLCBjbHN4IH0gZnJvbSAnY2xzeCc7XHJcbmltcG9ydCB7IHR3TWVyZ2UgfSBmcm9tICd0YWlsd2luZC1tZXJnZSc7XHJcbmltcG9ydCB7IGZvcm1hdCwgZGlmZmVyZW5jZUluRGF5cywgaXNBZnRlciwgaXNCZWZvcmUgfSBmcm9tICdkYXRlLWZucyc7XHJcbmltcG9ydCB7IGVzIH0gZnJvbSAnZGF0ZS1mbnMvbG9jYWxlJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjbiguLi5pbnB1dHM6IENsYXNzVmFsdWVbXSkge1xyXG4gIHJldHVybiB0d01lcmdlKGNsc3goaW5wdXRzKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRDdXJyZW5jeShhbW91bnQ6IG51bWJlciwgY3VycmVuY3k6IHN0cmluZyA9ICdVU0QnKTogc3RyaW5nIHtcclxuICByZXR1cm4gbmV3IEludGwuTnVtYmVyRm9ybWF0KCdlbi1VUycsIHtcclxuICAgIHN0eWxlOiAnY3VycmVuY3knLFxyXG4gICAgY3VycmVuY3k6IGN1cnJlbmN5LFxyXG4gIH0pLmZvcm1hdChhbW91bnQpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RGF0ZShkYXRlOiBEYXRlLCBwYXR0ZXJuOiBzdHJpbmcgPSAnZGQvTU0veXl5eScpOiBzdHJpbmcge1xyXG4gIHJldHVybiBmb3JtYXQoZGF0ZSwgcGF0dGVybiwgeyBsb2NhbGU6IGVzIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2FsY3VsYXRlTmlnaHRzKGNoZWNrSW46IERhdGUsIGNoZWNrT3V0OiBEYXRlKTogbnVtYmVyIHtcclxuICByZXR1cm4gZGlmZmVyZW5jZUluRGF5cyhjaGVja091dCwgY2hlY2tJbik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZURhdGVSYW5nZShjaGVja0luOiBEYXRlLCBjaGVja091dDogRGF0ZSk6IHN0cmluZyB8IG51bGwge1xyXG4gIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcclxuICB0b2RheS5zZXRIb3VycygwLCAwLCAwLCAwKTtcclxuICBcclxuICBpZiAoaXNCZWZvcmUoY2hlY2tJbiwgdG9kYXkpKSB7XHJcbiAgICByZXR1cm4gJ0xhIGZlY2hhIGRlIGVudHJhZGEgbm8gcHVlZGUgc2VyIGFudGVyaW9yIGEgaG95JztcclxuICB9XHJcbiAgXHJcbiAgaWYgKCFpc0FmdGVyKGNoZWNrT3V0LCBjaGVja0luKSkge1xyXG4gICAgcmV0dXJuICdMYSBmZWNoYSBkZSBzYWxpZGEgZGViZSBzZXIgcG9zdGVyaW9yIGEgbGEgZmVjaGEgZGUgZW50cmFkYSc7XHJcbiAgfVxyXG4gIFxyXG4gIGNvbnN0IG5pZ2h0cyA9IGNhbGN1bGF0ZU5pZ2h0cyhjaGVja0luLCBjaGVja091dCk7XHJcbiAgaWYgKG5pZ2h0cyA+IDMwKSB7XHJcbiAgICByZXR1cm4gJ0xhIGVzdGFkw61hIG5vIHB1ZWRlIHNlciBtYXlvciBhIDMwIG5vY2hlcyc7XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChuaWdodHMgPCAxKSB7XHJcbiAgICByZXR1cm4gJ0xhIGVzdGFkw61hIGRlYmUgc2VyIGRlIGFsIG1lbm9zIDEgbm9jaGUnO1xyXG4gIH1cclxuICBcclxuICByZXR1cm4gbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlR3Vlc3RDb3VudChndWVzdHM6IG51bWJlcik6IHN0cmluZyB8IG51bGwge1xyXG4gIGlmIChndWVzdHMgPCAxKSB7XHJcbiAgICByZXR1cm4gJ0RlYmUgaGFiZXIgYWwgbWVub3MgMSBodcOpc3BlZCc7XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChndWVzdHMgPiAxMikge1xyXG4gICAgcmV0dXJuICdFbCBtw6F4aW1vIGVzIDEyIGh1w6lzcGVkZXMgcG9yIHJlc2VydmEnO1xyXG4gIH1cclxuICBcclxuICByZXR1cm4gbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlQm9va2luZ1JlZmVyZW5jZSgpOiBzdHJpbmcge1xyXG4gIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUubm93KCkudG9TdHJpbmcoMzYpO1xyXG4gIGNvbnN0IHJhbmRvbSA9IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA1KTtcclxuICByZXR1cm4gYFNDLSR7dGltZXN0YW1wfSR7cmFuZG9tfWAudG9VcHBlckNhc2UoKTtcclxufSAiXSwibmFtZXMiOlsiY2xzeCIsInR3TWVyZ2UiLCJmb3JtYXQiLCJkaWZmZXJlbmNlSW5EYXlzIiwiaXNBZnRlciIsImlzQmVmb3JlIiwiZXMiLCJjbiIsImlucHV0cyIsImZvcm1hdEN1cnJlbmN5IiwiYW1vdW50IiwiY3VycmVuY3kiLCJJbnRsIiwiTnVtYmVyRm9ybWF0Iiwic3R5bGUiLCJmb3JtYXREYXRlIiwiZGF0ZSIsInBhdHRlcm4iLCJsb2NhbGUiLCJjYWxjdWxhdGVOaWdodHMiLCJjaGVja0luIiwiY2hlY2tPdXQiLCJ2YWxpZGF0ZURhdGVSYW5nZSIsInRvZGF5IiwiRGF0ZSIsInNldEhvdXJzIiwibmlnaHRzIiwidmFsaWRhdGVHdWVzdENvdW50IiwiZ3Vlc3RzIiwiZ2VuZXJhdGVCb29raW5nUmVmZXJlbmNlIiwidGltZXN0YW1wIiwibm93IiwidG9TdHJpbmciLCJyYW5kb20iLCJNYXRoIiwic3Vic3RyIiwidG9VcHBlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/utils.ts\n");

/***/ }),

/***/ "(rsc)/./lib/whatsapp.ts":
/*!*************************!*\
  !*** ./lib/whatsapp.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkWhatsAppStatus: () => (/* binding */ checkWhatsAppStatus),\n/* harmony export */   formatDateForWhatsApp: () => (/* binding */ formatDateForWhatsApp),\n/* harmony export */   getRoomTypeName: () => (/* binding */ getRoomTypeName),\n/* harmony export */   sendBookingConfirmation: () => (/* binding */ sendBookingConfirmation),\n/* harmony export */   sendBookingReminder: () => (/* binding */ sendBookingReminder),\n/* harmony export */   sendWelcomeMessage: () => (/* binding */ sendWelcomeMessage),\n/* harmony export */   sendWhatsAppMessage: () => (/* binding */ sendWhatsAppMessage)\n/* harmony export */ });\n// Función para enviar mensajes de WhatsApp directamente a Green API desde el backend\nconst sendWhatsAppMessage = async (phone, message)=>{\n    const idInstance = \"7105281616\";\n    const apiTokenInstance = \"e44f5320e85d4222baff6089d5f192bc6363f86e55da4e3e8c\";\n    // Formatea el número para Green API\n    let cleaned = phone.replace(/[^0-9]/g, \"\");\n    if (!cleaned.startsWith(\"54\")) {\n        cleaned = \"54\" + cleaned;\n    }\n    const chatId = cleaned + \"@c.us\";\n    const url = `https://api.green-api.com/waInstance${idInstance}/sendMessage/${apiTokenInstance}`;\n    try {\n        const res = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                chatId,\n                message\n            })\n        });\n        const data = await res.json();\n        if (!res.ok) {\n            console.error(\"[GreenAPI] Error HTTP:\", data);\n            return {\n                success: false,\n                error: data.error || \"Error enviando mensaje\"\n            };\n        }\n        return {\n            success: true,\n            messageId: data.idMessage\n        };\n    } catch (error) {\n        console.error(\"[GreenAPI] Error de conexi\\xf3n:\", error);\n        return {\n            success: false,\n            error: \"Error de conexi\\xf3n\"\n        };\n    }\n};\n// Función para obtener el nombre del tipo de habitación\nconst getRoomTypeName = (roomTypeId)=>{\n    const roomTypes = {\n        \"casa-playa\": \"Casa de Playa (Cuarto Compartido)\",\n        \"casitas-privadas\": \"Casitas Privadas\",\n        \"casas-deluxe\": \"Casas Deluxe\"\n    };\n    return roomTypes[roomTypeId] || roomTypeId;\n};\n// Función para formatear fechas para WhatsApp\nconst formatDateForWhatsApp = (dateString)=>{\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"es-ES\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n    });\n};\n// Función para enviar confirmación de reserva\nconst sendBookingConfirmation = async (phone, bookingData)=>{\n    const message = `¡Hola ${bookingData.guestName}! 🎉\n\nTu reserva ha sido confirmada exitosamente.\n\n📅 Check-in: ${formatDateForWhatsApp(bookingData.checkIn)}\n📅 Check-out: ${formatDateForWhatsApp(bookingData.checkOut)}\n🏠 Habitación: ${getRoomTypeName(bookingData.roomTypeId)}\n👥 Huéspedes: ${bookingData.guests}\n💰 Total: $${bookingData.total}\n🔢 Referencia: ${bookingData.bookingReference}\n\n¡Nos vemos pronto en SurfCamp Santa Teresa! 🌊`;\n    return sendWhatsAppMessage(phone, message);\n};\n// Función para enviar recordatorio de reserva\nconst sendBookingReminder = async (phone, bookingData)=>{\n    const message = `¡Hola ${bookingData.guestName}! 🌊\n\nTe recordamos tu reserva en SurfCamp Santa Teresa:\n\n📅 Check-in: ${formatDateForWhatsApp(bookingData.checkIn)}\n🏠 Habitación: ${getRoomTypeName(bookingData.roomTypeId)}\n🔢 Referencia: ${bookingData.bookingReference}\n\n¡Estamos ansiosos por recibirte! 🏄‍♂️`;\n    return sendWhatsAppMessage(phone, message);\n};\n// Función para enviar mensaje de bienvenida\nconst sendWelcomeMessage = async (phone, bookingData)=>{\n    const message = `¡Bienvenido/a ${bookingData.guestName}! 🎉\n\nTu reserva en SurfCamp Santa Teresa está lista:\n\n🏠 Habitación: ${getRoomTypeName(bookingData.roomTypeId)}\n🔢 Referencia: ${bookingData.bookingReference}\n\n¡Disfruta de tu estadía! 🌊`;\n    return sendWhatsAppMessage(phone, message);\n};\n// Función para verificar estado de Green API\nconst checkWhatsAppStatus = async ()=>{\n    try {\n        const response = await fetch(\"/api/whatsapp\", {\n            method: \"GET\"\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            return {\n                configured: false,\n                error: result.error\n            };\n        }\n        return {\n            configured: true,\n            state: result.state,\n            instance: result.instance\n        };\n    } catch (error) {\n        return {\n            configured: false,\n            error: \"Error de conexi\\xf3n\"\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/whatsapp.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/date-fns","vendor-chunks/tailwind-merge","vendor-chunks/clsx","vendor-chunks/@babel","vendor-chunks/axios","vendor-chunks/asynckit","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/call-bind-apply-helpers","vendor-chunks/debug","vendor-chunks/get-proto","vendor-chunks/mime-db","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/mime-types","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/has-flag","vendor-chunks/get-intrinsic","vendor-chunks/es-set-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/delayed-stream","vendor-chunks/combined-stream"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Freserve%2Froute&page=%2Fapi%2Freserve%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Freserve%2Froute.ts&appDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cloko_%5COneDrive%5CDesktop%5CEscritorio%5Csurfcamp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();